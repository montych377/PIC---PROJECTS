

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 19 06:56:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172     074B                     __pidataBANK0:
   173                           
   174                           ;initializer for main@F1064
   175     074B  343F               	retlw	63
   176     074C  3400               	retlw	0
   177     074D  3406               	retlw	6
   178     074E  3400               	retlw	0
   179     074F  345B               	retlw	91
   180     0750  3400               	retlw	0
   181     0751  344F               	retlw	79
   182     0752  3400               	retlw	0
   183     0753  3466               	retlw	102
   184     0754  3400               	retlw	0
   185     0755  346D               	retlw	109
   186     0756  3400               	retlw	0
   187     0757  347D               	retlw	125
   188     0758  3400               	retlw	0
   189     0759  3407               	retlw	7
   190     075A  3400               	retlw	0
   191     075B  347F               	retlw	127
   192     075C  3400               	retlw	0
   193     075D  346F               	retlw	111
   194     075E  3400               	retlw	0
   195     0006                     _PORTB	set	6
   196     0007                     _PORTC	set	7
   197     0008                     _PORTD	set	8
   198     0088                     _TRISD	set	136
   199     0087                     _TRISC	set	135
   200     0086                     _TRISB	set	134
   201                           
   202                           	psect	cinit
   203     07EE                     start_initialization:	
   204                           ; #config settings
   205                           
   206     07EE                     __initialization:
   207                           
   208                           ; Initialize objects allocated to BANK0
   209     07EE  1383               	bcf	3,7	;select IRP bank0
   210     07EF  304C               	movlw	low (__pdataBANK0+20)
   211     07F0  00FD               	movwf	btemp+-1
   212     07F1  3007               	movlw	high __pidataBANK0
   213     07F2  00FE               	movwf	btemp
   214     07F3  304B               	movlw	low __pidataBANK0
   215     07F4  00FF               	movwf	btemp+1
   216     07F5  3038               	movlw	low __pdataBANK0
   217     07F6  0084               	movwf	4
   218     07F7  120A  118A  273C  120A  118A  	fcall	init_ram0
   219     07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     07FC                     __end_of__initialization:
   223     07FC  0183               	clrf	3
   224     07FD  120A  118A  2F5F   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	dataBANK0
   227     0038                     __pdataBANK0:
   228     0038                     main@F1064:
   229     0038                     	ds	20
   230                           
   231                           	psect	inittext
   232     0738                     init_fetch0:	
   233                           ;	Called with low address in FSR and high address in W
   234                           
   235     0738  087E               	movf	btemp,w
   236     0739  008A               	movwf	10
   237     073A  087F               	movf	btemp+1,w
   238     073B  0082               	movwf	2
   239     073C                     init_ram0:	
   240                           ;Called with:
   241                           ;	high address of idata address in btemp 
   242                           ;	low address of idata address in btemp+1 
   243                           ;	low address of data in FSR
   244                           ;	high address + 1 of data in btemp-1
   245                           
   246     073C  120A  118A  2738  120A  118A  	fcall	init_fetch0
   247     0741  0080               	movwf	0
   248     0742  0A84               	incf	4,f
   249     0743  0804               	movf	4,w
   250     0744  067D               	xorwf	btemp+-1,w
   251     0745  1903               	btfsc	3,2
   252     0746  3400               	retlw	0
   253     0747  0AFF               	incf	btemp+1,f
   254     0748  1903               	btfsc	3,2
   255     0749  0AFE               	incf	btemp,f
   256     074A  2F3C               	goto	init_ram0
   257                           
   258                           	psect	cstackCOMMON
   259     0070                     __pcstackCOMMON:
   260     0070                     ?_main:
   261     0070                     main@argc:	
   262                           ; 2 bytes @ 0x0
   263                           
   264                           
   265                           ; 2 bytes @ 0x0
   266     0070                     	ds	2
   267     0072                     main@argv:
   268                           
   269                           ; 2 bytes @ 0x2
   270     0072                     	ds	2
   271     0074                     ??_main:
   272                           
   273                           ; 1 bytes @ 0x4
   274     0074                     	ds	4
   275                           
   276                           	psect	cstackBANK0
   277     0020                     __pcstackBANK0:
   278     0020                     main@arr:
   279                           
   280                           ; 20 bytes @ 0x0
   281     0020                     	ds	20
   282     0034                     main@i:
   283                           
   284                           ; 2 bytes @ 0x14
   285     0034                     	ds	2
   286     0036                     main@j:
   287                           
   288                           ; 2 bytes @ 0x16
   289     0036                     	ds	2
   290                           
   291                           	psect	maintext
   292     075F                     __pmaintext:	
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 20 in file "Main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;  argc            2    0[COMMON] int 
   301 ;;  argv            2    2[COMMON] PTR PTR unsigned char 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  arr            20    0[BANK0 ] int [10]
   304 ;;  j               2   22[BANK0 ] int 
   305 ;;  i               2   20[BANK0 ] int 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  2    0[COMMON] int 
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         4       0       0       0       0
   316 ;;      Locals:         0      24       0       0       0
   317 ;;      Temps:          4       0       0       0       0
   318 ;;      Totals:         8      24       0       0       0
   319 ;;Total ram usage:       32 bytes
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327     075F                     _main:	
   328                           ;psect for function _main
   329                           
   330     075F                     l660:	
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   333                           
   334                           
   335                           ;Main.c: 21:     TRISB = 0x00;
   336     075F  1683               	bsf	3,5	;RP0=1, select bank1
   337     0760  1303               	bcf	3,6	;RP1=0, select bank1
   338     0761  0186               	clrf	6	;volatile
   339                           
   340                           ;Main.c: 22:     TRISC = 0x00;
   341     0762  0187               	clrf	7	;volatile
   342     0763                     l662:
   343                           
   344                           ;Main.c: 23:     TRISD = 0xff;
   345     0763  30FF               	movlw	255
   346     0764  0088               	movwf	8	;volatile
   347     0765                     l664:
   348                           
   349                           ;Main.c: 24:     int i=0,j=0,arr[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f}
      +                          ;;
   350     0765  1283               	bcf	3,5	;RP0=0, select bank0
   351     0766  1303               	bcf	3,6	;RP1=0, select bank0
   352     0767  01B4               	clrf	main@i
   353     0768  01B5               	clrf	main@i+1
   354     0769                     l666:
   355     0769  01B6               	clrf	main@j
   356     076A  01B7               	clrf	main@j+1
   357     076B                     l668:
   358     076B  3020               	movlw	main@arr& (0+255)
   359     076C  0084               	movwf	4
   360     076D  3038               	movlw	low main@F1064
   361     076E  00F4               	movwf	??_main
   362     076F  0804               	movf	4,w
   363     0770  00F5               	movwf	??_main+1
   364     0771  3014               	movlw	20
   365     0772  00F6               	movwf	??_main+2
   366     0773                     u60:
   367     0773  0874               	movf	??_main,w
   368     0774  0084               	movwf	4
   369     0775  1383               	bcf	3,7	;select IRP bank0
   370     0776  0800               	movf	0,w
   371     0777  00F7               	movwf	??_main+3
   372     0778  0AF4               	incf	??_main,f
   373     0779  0875               	movf	??_main+1,w
   374     077A  0084               	movwf	4
   375     077B  0877               	movf	??_main+3,w
   376     077C  0080               	movwf	0
   377     077D  0AF5               	incf	??_main+1,f
   378     077E  0BF6               	decfsz	??_main+2,f
   379     077F  2F73               	goto	u60
   380     0780                     l670:
   381                           
   382                           ;Main.c: 26:         if((PORTD & 1) == 1){
   383     0780  1283               	bcf	3,5	;RP0=0, select bank0
   384     0781  1303               	bcf	3,6	;RP1=0, select bank0
   385     0782  1C08               	btfss	8,0	;volatile
   386     0783  2F85               	goto	u71
   387     0784  2F86               	goto	u70
   388     0785                     u71:
   389     0785  2F90               	goto	l674
   390     0786                     u70:
   391     0786                     l672:
   392                           
   393                           ;Main.c: 27:             j++;
   394     0786  3001               	movlw	1
   395     0787  07B6               	addwf	main@j,f
   396     0788  1803               	skipnc
   397     0789  0AB7               	incf	main@j+1,f
   398     078A  3000               	movlw	0
   399     078B  07B7               	addwf	main@j+1,f
   400     078C                     l23:	
   401                           ;Main.c: 28:             while((PORTD & 1) == 1);
   402                           
   403     078C  1808               	btfsc	8,0	;volatile
   404     078D  2F8F               	goto	u81
   405     078E  2F90               	goto	u80
   406     078F                     u81:
   407     078F  2F8C               	goto	l23
   408     0790                     u80:
   409     0790                     l674:
   410                           
   411                           ;Main.c: 30:         if(j>9){
   412     0790  0837               	movf	main@j+1,w
   413     0791  3A80               	xorlw	128
   414     0792  00FF               	movwf	btemp+1
   415     0793  3080               	movlw	128
   416     0794  027F               	subwf	btemp+1,w
   417     0795  1D03               	skipz
   418     0796  2F99               	goto	u95
   419     0797  300A               	movlw	10
   420     0798  0236               	subwf	main@j,w
   421     0799                     u95:
   422     0799  1C03               	skipc
   423     079A  2F9C               	goto	u91
   424     079B  2F9D               	goto	u90
   425     079C                     u91:
   426     079C  2FA7               	goto	l680
   427     079D                     u90:
   428     079D                     l676:
   429                           
   430                           ;Main.c: 31:             i++;
   431     079D  3001               	movlw	1
   432     079E  1283               	bcf	3,5	;RP0=0, select bank0
   433     079F  1303               	bcf	3,6	;RP1=0, select bank0
   434     07A0  07B4               	addwf	main@i,f
   435     07A1  1803               	skipnc
   436     07A2  0AB5               	incf	main@i+1,f
   437     07A3  3000               	movlw	0
   438     07A4  07B5               	addwf	main@i+1,f
   439     07A5                     l678:
   440                           
   441                           ;Main.c: 32:             j=0;
   442     07A5  01B6               	clrf	main@j
   443     07A6  01B7               	clrf	main@j+1
   444     07A7                     l680:
   445                           
   446                           ;Main.c: 34:         if(i>9){
   447     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   448     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   449     07A9  0835               	movf	main@i+1,w
   450     07AA  3A80               	xorlw	128
   451     07AB  00FF               	movwf	btemp+1
   452     07AC  3080               	movlw	128
   453     07AD  027F               	subwf	btemp+1,w
   454     07AE  1D03               	skipz
   455     07AF  2FB2               	goto	u105
   456     07B0  300A               	movlw	10
   457     07B1  0234               	subwf	main@i,w
   458     07B2                     u105:
   459     07B2  1C03               	skipc
   460     07B3  2FB5               	goto	u101
   461     07B4  2FB6               	goto	u100
   462     07B5                     u101:
   463     07B5  2FC0               	goto	l686
   464     07B6                     u100:
   465     07B6                     l682:
   466                           
   467                           ;Main.c: 35:             j++;
   468     07B6  3001               	movlw	1
   469     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   470     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   471     07B9  07B6               	addwf	main@j,f
   472     07BA  1803               	skipnc
   473     07BB  0AB7               	incf	main@j+1,f
   474     07BC  3000               	movlw	0
   475     07BD  07B7               	addwf	main@j+1,f
   476     07BE                     l684:
   477                           
   478                           ;Main.c: 36:             i=0;
   479     07BE  01B4               	clrf	main@i
   480     07BF  01B5               	clrf	main@i+1
   481     07C0                     l686:
   482                           
   483                           ;Main.c: 38:         PORTC = 0x02;
   484     07C0  3002               	movlw	2
   485     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   486     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   487     07C3  0087               	movwf	7	;volatile
   488     07C4                     l688:
   489                           
   490                           ;Main.c: 39:         PORTB = arr[i];
   491     07C4  0834               	movf	main@i,w
   492     07C5  00F4               	movwf	??_main
   493     07C6  0774               	addwf	??_main,w
   494     07C7  3E20               	addlw	(low (main@arr| 0))& (0+255)
   495     07C8  0084               	movwf	4
   496     07C9  1383               	bcf	3,7	;select IRP bank0
   497     07CA  0800               	movf	0,w
   498     07CB  0086               	movwf	6	;volatile
   499     07CC                     l690:
   500                           
   501                           ;Main.c: 40:         _delay((unsigned long)((50)*(1000000/4000.0)));
   502     07CC  3011               	movlw	17
   503     07CD  00F5               	movwf	??_main+1
   504     07CE  303A               	movlw	58
   505     07CF  00F4               	movwf	??_main
   506     07D0                     u117:
   507     07D0  0BF4               	decfsz	??_main,f
   508     07D1  2FD0               	goto	u117
   509     07D2  0BF5               	decfsz	??_main+1,f
   510     07D3  2FD0               	goto	u117
   511     07D4  0000               	nop
   512     07D5                     l692:
   513                           
   514                           ;Main.c: 41:         PORTC = 0x01;
   515     07D5  3001               	movlw	1
   516     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   517     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   518     07D8  0087               	movwf	7	;volatile
   519     07D9                     l694:
   520                           
   521                           ;Main.c: 42:         PORTB = arr[j];
   522     07D9  0836               	movf	main@j,w
   523     07DA  00F4               	movwf	??_main
   524     07DB  0774               	addwf	??_main,w
   525     07DC  3E20               	addlw	(low (main@arr| 0))& (0+255)
   526     07DD  0084               	movwf	4
   527     07DE  1383               	bcf	3,7	;select IRP bank0
   528     07DF  0800               	movf	0,w
   529     07E0  0086               	movwf	6	;volatile
   530     07E1                     l696:
   531                           
   532                           ;Main.c: 43:         _delay((unsigned long)((50)*(1000000/4000.0)));
   533     07E1  3011               	movlw	17
   534     07E2  00F5               	movwf	??_main+1
   535     07E3  303A               	movlw	58
   536     07E4  00F4               	movwf	??_main
   537     07E5                     u127:
   538     07E5  0BF4               	decfsz	??_main,f
   539     07E6  2FE5               	goto	u127
   540     07E7  0BF5               	decfsz	??_main+1,f
   541     07E8  2FE5               	goto	u127
   542     07E9  0000               	nop
   543     07EA  2F80               	goto	l670
   544     07EB  120A  118A  2800   	ljmp	start
   545     07EE                     __end_of_main:
   546     007E                     btemp	set	126	;btemp
   547     007E                     wtemp0	set	126
   548                           
   549                           	psect	idloc
   550                           
   551                           ;Config register IDLOC0 @ 0x2000
   552                           ;	unspecified, using default values
   553     2000                     	org	8192
   554     2000  3FFF               	dw	16383
   555                           
   556                           ;Config register IDLOC1 @ 0x2001
   557                           ;	unspecified, using default values
   558     2001                     	org	8193
   559     2001  3FFF               	dw	16383
   560                           
   561                           ;Config register IDLOC2 @ 0x2002
   562                           ;	unspecified, using default values
   563     2002                     	org	8194
   564     2002  3FFF               	dw	16383
   565                           
   566                           ;Config register IDLOC3 @ 0x2003
   567                           ;	unspecified, using default values
   568     2003                     	org	8195
   569     2003  3FFF               	dw	16383
   570                           
   571                           	psect	config
   572                           
   573                           ;Config register CONFIG @ 0x2007
   574                           ;	Oscillator Selection bits
   575                           ;	FOSC = EXTRC, RC oscillator
   576                           ;	Watchdog Timer Enable bit
   577                           ;	WDTE = OFF, WDT disabled
   578                           ;	Power-up Timer Enable bit
   579                           ;	PWRTE = OFF, PWRT disabled
   580                           ;	Brown-out Reset Enable bit
   581                           ;	BOREN = ON, BOR enabled
   582                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   583                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   584                           ;	Data EEPROM Memory Code Protection bit
   585                           ;	CPD = OFF, Data EEPROM code protection off
   586                           ;	Flash Program Memory Write Enable bits
   587                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   588                           ;	In-Circuit Debugger Mode bit
   589                           ;	DEBUG = 0x1, unprogrammed default
   590                           ;	Flash Program Memory Code Protection bit
   591                           ;	CP = OFF, Code protection off
   592     2007                     	org	8199
   593     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     24      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    28      4     142
                                              0 COMMON     8     4      4
                                              0 BANK0     24    24      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      34      12        0.0%
ABS                  0      0      34       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 06:56:31 2023

                      pc 0002                       l23 078C                       u60 0773  
                     u70 0786                       u71 0785                       u80 0790  
                     u81 078F                       u90 079D                       u91 079C  
                     u95 0799                       fsr 0004                      l660 075F  
                    l670 0780                      l662 0763                      l680 07A7  
                    l672 0786                      l664 0765                      l690 07CC  
                    l682 07B6                      l674 0790                      l666 0769  
                    l692 07D5                      l684 07BE                      l676 079D  
                    l668 076B                      l694 07D9                      l686 07C0  
                    l678 07A5                      l696 07E1                      l688 07C4  
                    u100 07B6                      u101 07B5                      u105 07B2  
                    u117 07D0                      u127 07E5                      fsr0 0004  
                    indf 0000                     _main 075F                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    main@i 0034  
                  main@j 0036                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 074B               __pmaintext 075F                  main@arr 0020  
   end_of_initialization 07FC      start_initialization 07EE               init_fetch0 0738  
            __pdataBANK0 0038                ___latbits 0002            __pcstackBANK0 0020  
              main@F1064 0038                 main@argc 0070                 main@argv 0072  
               init_ram0 073C  
