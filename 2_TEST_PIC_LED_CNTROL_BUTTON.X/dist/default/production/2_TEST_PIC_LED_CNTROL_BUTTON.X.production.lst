

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 18 23:10:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172     077E                     __pidataBANK0:
   173                           
   174                           ;initializer for main@F1063
   175     077E  3400               	retlw	0
   176     077F  3400               	retlw	0
   177     0780  3401               	retlw	1
   178     0781  3400               	retlw	0
   179     0782  3402               	retlw	2
   180     0783  3400               	retlw	0
   181     0784  3404               	retlw	4
   182     0785  3400               	retlw	0
   183     0786  3408               	retlw	8
   184     0787  3400               	retlw	0
   185     0788  3410               	retlw	16
   186     0789  3400               	retlw	0
   187     078A  3420               	retlw	32
   188     078B  3400               	retlw	0
   189     078C  3440               	retlw	64
   190     078D  3400               	retlw	0
   191     078E  3480               	retlw	128
   192     078F  3400               	retlw	0
   193     0006                     _PORTB	set	6
   194     0008                     _PORTD	set	8
   195     0088                     _TRISD	set	136
   196     0086                     _TRISB	set	134
   197                           
   198                           	psect	cinit
   199     07EE                     start_initialization:	
   200                           ; #config settings
   201                           
   202     07EE                     __initialization:
   203                           
   204                           ; Initialize objects allocated to BANK0
   205     07EE  1383               	bcf	3,7	;select IRP bank0
   206     07EF  3046               	movlw	low (__pdataBANK0+18)
   207     07F0  00FD               	movwf	btemp+-1
   208     07F1  3007               	movlw	high __pidataBANK0
   209     07F2  00FE               	movwf	btemp
   210     07F3  307E               	movlw	low __pidataBANK0
   211     07F4  00FF               	movwf	btemp+1
   212     07F5  3034               	movlw	low __pdataBANK0
   213     07F6  0084               	movwf	4
   214     07F7  120A  118A  2794  120A  118A  	fcall	init_ram0
   215     07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     07FC                     __end_of__initialization:
   219     07FC  0183               	clrf	3
   220     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	dataBANK0
   223     0034                     __pdataBANK0:
   224     0034                     main@F1063:
   225     0034                     	ds	18
   226                           
   227                           	psect	inittext
   228     0790                     init_fetch0:	
   229                           ;	Called with low address in FSR and high address in W
   230                           
   231     0790  087E               	movf	btemp,w
   232     0791  008A               	movwf	10
   233     0792  087F               	movf	btemp+1,w
   234     0793  0082               	movwf	2
   235     0794                     init_ram0:	
   236                           ;Called with:
   237                           ;	high address of idata address in btemp 
   238                           ;	low address of idata address in btemp+1 
   239                           ;	low address of data in FSR
   240                           ;	high address + 1 of data in btemp-1
   241                           
   242     0794  120A  118A  2790  120A  118A  	fcall	init_fetch0
   243     0799  0080               	movwf	0
   244     079A  0A84               	incf	4,f
   245     079B  0804               	movf	4,w
   246     079C  067D               	xorwf	btemp+-1,w
   247     079D  1903               	btfsc	3,2
   248     079E  3400               	retlw	0
   249     079F  0AFF               	incf	btemp+1,f
   250     07A0  1903               	btfsc	3,2
   251     07A1  0AFE               	incf	btemp,f
   252     07A2  2F94               	goto	init_ram0
   253                           
   254                           	psect	cstackCOMMON
   255     0070                     __pcstackCOMMON:
   256     0070                     ?_main:
   257     0070                     main@argc:	
   258                           ; 2 bytes @ 0x0
   259                           
   260                           
   261                           ; 2 bytes @ 0x0
   262     0070                     	ds	2
   263     0072                     main@argv:
   264                           
   265                           ; 2 bytes @ 0x2
   266     0072                     	ds	2
   267     0074                     ??_main:
   268                           
   269                           ; 1 bytes @ 0x4
   270     0074                     	ds	4
   271                           
   272                           	psect	cstackBANK0
   273     0020                     __pcstackBANK0:
   274     0020                     main@arr:
   275                           
   276                           ; 18 bytes @ 0x0
   277     0020                     	ds	18
   278     0032                     main@i:
   279                           
   280                           ; 2 bytes @ 0x12
   281     0032                     	ds	2
   282                           
   283                           	psect	maintext
   284     07A3                     __pmaintext:	
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 21 in file "Main.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;  argc            2    0[COMMON] int 
   293 ;;  argv            2    2[COMMON] PTR PTR unsigned char 
   294 ;; Auto vars:     Size  Location     Type
   295 ;;  arr            18    0[BANK0 ] int [9]
   296 ;;  i               2   18[BANK0 ] int 
   297 ;; Return value:  Size  Location     Type
   298 ;;                  2    0[COMMON] int 
   299 ;; Registers used:
   300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   301 ;; Tracked objects:
   302 ;;		On entry : B00/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   306 ;;      Params:         4       0       0       0       0
   307 ;;      Locals:         0      20       0       0       0
   308 ;;      Temps:          4       0       0       0       0
   309 ;;      Totals:         8      20       0       0       0
   310 ;;Total ram usage:       28 bytes
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318     07A3                     _main:	
   319                           ;psect for function _main
   320                           
   321     07A3                     l633:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   324                           
   325                           
   326                           ;Main.c: 22:     TRISB = 0x00;
   327     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   328     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   329     07A5  0186               	clrf	6	;volatile
   330     07A6                     l635:
   331                           
   332                           ;Main.c: 23:     TRISD = 0xff;
   333     07A6  30FF               	movlw	255
   334     07A7  0088               	movwf	8	;volatile
   335     07A8                     l637:
   336                           
   337                           ;Main.c: 24:     int i = 0, arr[] = {0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
   338     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   339     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   340     07AA  01B2               	clrf	main@i
   341     07AB  01B3               	clrf	main@i+1
   342     07AC                     l639:
   343     07AC  3020               	movlw	main@arr& (0+255)
   344     07AD  0084               	movwf	4
   345     07AE  3034               	movlw	low main@F1063
   346     07AF  00F4               	movwf	??_main
   347     07B0  0804               	movf	4,w
   348     07B1  00F5               	movwf	??_main+1
   349     07B2  3012               	movlw	18
   350     07B3  00F6               	movwf	??_main+2
   351     07B4                     u50:
   352     07B4  0874               	movf	??_main,w
   353     07B5  0084               	movwf	4
   354     07B6  1383               	bcf	3,7	;select IRP bank0
   355     07B7  0800               	movf	0,w
   356     07B8  00F7               	movwf	??_main+3
   357     07B9  0AF4               	incf	??_main,f
   358     07BA  0875               	movf	??_main+1,w
   359     07BB  0084               	movwf	4
   360     07BC  0877               	movf	??_main+3,w
   361     07BD  0080               	movwf	0
   362     07BE  0AF5               	incf	??_main+1,f
   363     07BF  0BF6               	decfsz	??_main+2,f
   364     07C0  2FB4               	goto	u50
   365     07C1                     l641:
   366                           
   367                           ;Main.c: 26:         if((PORTD & 1) == 1){
   368     07C1  1C08               	btfss	8,0	;volatile
   369     07C2  2FC4               	goto	u61
   370     07C3  2FC5               	goto	u60
   371     07C4                     u61:
   372     07C4  2FCF               	goto	l645
   373     07C5                     u60:
   374     07C5                     l643:
   375                           
   376                           ;Main.c: 27:             i++;
   377     07C5  3001               	movlw	1
   378     07C6  07B2               	addwf	main@i,f
   379     07C7  1803               	skipnc
   380     07C8  0AB3               	incf	main@i+1,f
   381     07C9  3000               	movlw	0
   382     07CA  07B3               	addwf	main@i+1,f
   383     07CB                     l17:	
   384                           ;Main.c: 28:             while((PORTD & 1) == 1);
   385                           
   386     07CB  1808               	btfsc	8,0	;volatile
   387     07CC  2FCE               	goto	u71
   388     07CD  2FCF               	goto	u70
   389     07CE                     u71:
   390     07CE  2FCB               	goto	l17
   391     07CF                     u70:
   392     07CF                     l645:
   393                           
   394                           ;Main.c: 30:         if(i>8){
   395     07CF  0833               	movf	main@i+1,w
   396     07D0  3A80               	xorlw	128
   397     07D1  00FF               	movwf	btemp+1
   398     07D2  3080               	movlw	128
   399     07D3  027F               	subwf	btemp+1,w
   400     07D4  1D03               	skipz
   401     07D5  2FD8               	goto	u85
   402     07D6  3009               	movlw	9
   403     07D7  0232               	subwf	main@i,w
   404     07D8                     u85:
   405     07D8  1C03               	skipc
   406     07D9  2FDB               	goto	u81
   407     07DA  2FDC               	goto	u80
   408     07DB                     u81:
   409     07DB  2FE0               	goto	l649
   410     07DC                     u80:
   411     07DC                     l647:
   412                           
   413                           ;Main.c: 31:             i=0;
   414     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   415     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   416     07DE  01B2               	clrf	main@i
   417     07DF  01B3               	clrf	main@i+1
   418     07E0                     l649:
   419                           
   420                           ;Main.c: 33:         PORTB = arr[i];
   421     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   422     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   423     07E2  0832               	movf	main@i,w
   424     07E3  00F4               	movwf	??_main
   425     07E4  0774               	addwf	??_main,w
   426     07E5  3E20               	addlw	(low (main@arr| 0))& (0+255)
   427     07E6  0084               	movwf	4
   428     07E7  1383               	bcf	3,7	;select IRP bank0
   429     07E8  0800               	movf	0,w
   430     07E9  0086               	movwf	6	;volatile
   431     07EA  2FC1               	goto	l641
   432     07EB  120A  118A  2800   	ljmp	start
   433     07EE                     __end_of_main:
   434     007E                     btemp	set	126	;btemp
   435     007E                     wtemp0	set	126
   436                           
   437                           	psect	idloc
   438                           
   439                           ;Config register IDLOC0 @ 0x2000
   440                           ;	unspecified, using default values
   441     2000                     	org	8192
   442     2000  3FFF               	dw	16383
   443                           
   444                           ;Config register IDLOC1 @ 0x2001
   445                           ;	unspecified, using default values
   446     2001                     	org	8193
   447     2001  3FFF               	dw	16383
   448                           
   449                           ;Config register IDLOC2 @ 0x2002
   450                           ;	unspecified, using default values
   451     2002                     	org	8194
   452     2002  3FFF               	dw	16383
   453                           
   454                           ;Config register IDLOC3 @ 0x2003
   455                           ;	unspecified, using default values
   456     2003                     	org	8195
   457     2003  3FFF               	dw	16383
   458                           
   459                           	psect	config
   460                           
   461                           ;Config register CONFIG @ 0x2007
   462                           ;	Oscillator Selection bits
   463                           ;	FOSC = EXTRC, RC oscillator
   464                           ;	Watchdog Timer Enable bit
   465                           ;	WDTE = OFF, WDT disabled
   466                           ;	Power-up Timer Enable bit
   467                           ;	PWRTE = OFF, PWRT disabled
   468                           ;	Brown-out Reset Enable bit
   469                           ;	BOREN = ON, BOR enabled
   470                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   471                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   472                           ;	Data EEPROM Memory Code Protection bit
   473                           ;	CPD = OFF, Data EEPROM code protection off
   474                           ;	Flash Program Memory Write Enable bits
   475                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   476                           ;	In-Circuit Debugger Mode bit
   477                           ;	DEBUG = 0x1, unprogrammed default
   478                           ;	Flash Program Memory Code Protection bit
   479                           ;	CP = OFF, Code protection off
   480     2007                     	org	8199
   481     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     20      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    24      4      71
                                              0 COMMON     8     4      4
                                              0 BANK0     20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2E      12        0.0%
ABS                  0      0      2E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 18 23:10:01 2023

                      pc 0002                       l17 07CB                       u50 07B4  
                     u60 07C5                       u61 07C4                       u70 07CF  
                     u71 07CE                       u80 07DC                       u81 07DB  
                     u85 07D8                       fsr 0004                      l641 07C1  
                    l633 07A3                      l643 07C5                      l635 07A6  
                    l645 07CF                      l637 07A8                      l647 07DC  
                    l639 07AC                      l649 07E0                      fsr0 0004  
                    indf 0000                     _main 07A3                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  main@i 0032                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 077E               __pmaintext 07A3                  main@arr 0020  
   end_of_initialization 07FC      start_initialization 07EE               init_fetch0 0790  
            __pdataBANK0 0034                ___latbits 0002            __pcstackBANK0 0020  
              main@F1063 0034                 main@argc 0070                 main@argv 0072  
               init_ram0 0794  
