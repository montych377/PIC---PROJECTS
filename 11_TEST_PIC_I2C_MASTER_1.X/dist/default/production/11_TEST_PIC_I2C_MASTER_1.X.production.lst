

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jan 22 14:39:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0013                     _SSPBUF	set	19
   175     0014                     _SSPCON	set	20
   176     0094                     _SSPSTAT	set	148
   177     0093                     _SSPADD	set	147
   178     0091                     _SSPCON2	set	145
   179     048A                     _PEN	set	1162
   180     048C                     _ACKEN	set	1164
   181     048D                     _ACKDT	set	1165
   182     048B                     _RCEN	set	1163
   183     0488                     _SEN	set	1160
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2EEE   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_I2C_Initialize:
   200     0070                     ?_I2C_Start:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ??_I2C_Start:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_I2C_WriteData:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ??_I2C_WriteData:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_I2C_Stop:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ??_I2C_Stop:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ?_I2C_MasterWait:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ??_I2C_MasterWait:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?___wmul:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     I2C_WriteData@data:	
   228                           ; 2 bytes @ 0x0
   229                           
   230     0070                     ___wmul@multiplier:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           ; 2 bytes @ 0x0
   235     0070                     	ds	2
   236     0072                     ___wmul@multiplicand:
   237                           
   238                           ; 2 bytes @ 0x2
   239     0072                     	ds	2
   240     0074                     ??___wmul:
   241     0074                     ___wmul@product:	
   242                           ; 1 bytes @ 0x4
   243                           
   244                           
   245                           ; 2 bytes @ 0x4
   246     0074                     	ds	2
   247     0076                     ?___aldiv:
   248     0076                     ___aldiv@divisor:	
   249                           ; 4 bytes @ 0x6
   250                           
   251                           
   252                           ; 4 bytes @ 0x6
   253     0076                     	ds	4
   254     007A                     ___aldiv@dividend:
   255                           
   256                           ; 4 bytes @ 0xA
   257     007A                     	ds	4
   258                           
   259                           	psect	cstackBANK0
   260     0020                     __pcstackBANK0:
   261     0020                     ??___aldiv:
   262                           
   263                           ; 1 bytes @ 0x0
   264     0020                     	ds	1
   265     0021                     ___aldiv@counter:
   266                           
   267                           ; 1 bytes @ 0x1
   268     0021                     	ds	1
   269     0022                     ___aldiv@sign:
   270                           
   271                           ; 1 bytes @ 0x2
   272     0022                     	ds	1
   273     0023                     ___aldiv@quotient:
   274                           
   275                           ; 4 bytes @ 0x3
   276     0023                     	ds	4
   277     0027                     ??_I2C_Initialize:
   278                           
   279                           ; 1 bytes @ 0x7
   280     0027                     	ds	2
   281     0029                     I2C_Initialize@c:
   282                           
   283                           ; 1 bytes @ 0x9
   284     0029                     	ds	1
   285     002A                     ?_main:
   286     002A                     main@argc:	
   287                           ; 2 bytes @ 0xA
   288                           
   289                           
   290                           ; 2 bytes @ 0xA
   291     002A                     	ds	2
   292     002C                     main@argv:
   293                           
   294                           ; 2 bytes @ 0xC
   295     002C                     	ds	2
   296     002E                     ??_main:
   297                           
   298                           ; 1 bytes @ 0xE
   299     002E                     	ds	3
   300                           
   301                           	psect	maintext
   302     06EE                     __pmaintext:	
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 29 in file "Main_I2c_M.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  argc            2   10[BANK0 ] int 
   311 ;;  argv            2   12[BANK0 ] PTR PTR unsigned char 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  2   10[BANK0 ] int 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       4       0       0       0
   324 ;;      Locals:         0       0       0       0       0
   325 ;;      Temps:          0       3       0       0       0
   326 ;;      Totals:         0       7       0       0       0
   327 ;;Total ram usage:        7 bytes
   328 ;; Hardware stack levels required when called: 2
   329 ;; This function calls:
   330 ;;		_I2C_Initialize
   331 ;;		_I2C_Start
   332 ;;		_I2C_Stop
   333 ;;		_I2C_WriteData
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339     06EE                     _main:	
   340                           ;psect for function _main
   341                           
   342     06EE                     l809:	
   343                           ;incstack = 0
   344                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   345                           
   346                           
   347                           ;Main_I2c_M.c: 30:     I2C_Initialize(100);
   348     06EE  3064               	movlw	100
   349     06EF  120A  118A  2722  120A  118A  	fcall	_I2C_Initialize
   350     06F4                     l35:	
   351                           ;Main_I2c_M.c: 31:     while(1){
   352                           
   353                           
   354                           ;Main_I2c_M.c: 32:         I2C_Start();
   355     06F4  120A  118A  269F  120A  118A  	fcall	_I2C_Start
   356                           
   357                           ;Main_I2c_M.c: 33:         I2C_WriteData(0xD0);
   358     06F9  30D0               	movlw	208
   359     06FA  120A  118A  26B1  120A  118A  	fcall	_I2C_WriteData
   360                           
   361                           ;Main_I2c_M.c: 34:         I2C_WriteData(0x88);
   362     06FF  3088               	movlw	136
   363     0700  120A  118A  26B1  120A  118A  	fcall	_I2C_WriteData
   364                           
   365                           ;Main_I2c_M.c: 35:         I2C_WriteData(0xFF);
   366     0705  30FF               	movlw	255
   367     0706  120A  118A  26B1  120A  118A  	fcall	_I2C_WriteData
   368                           
   369                           ;Main_I2c_M.c: 36:         I2C_Stop();
   370     070B  120A  118A  26A8  120A  118A  	fcall	_I2C_Stop
   371     0710                     l811:
   372                           
   373                           ;Main_I2c_M.c: 37:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   374     0710  300B               	movlw	11
   375     0711  1283               	bcf	3,5	;RP0=0, select bank0
   376     0712  1303               	bcf	3,6	;RP1=0, select bank0
   377     0713  00B0               	movwf	??_main+2
   378     0714  3026               	movlw	38
   379     0715  00AF               	movwf	??_main+1
   380     0716  305D               	movlw	93
   381     0717  00AE               	movwf	??_main
   382     0718                     u337:
   383     0718  0BAE               	decfsz	??_main,f
   384     0719  2F18               	goto	u337
   385     071A  0BAF               	decfsz	??_main+1,f
   386     071B  2F18               	goto	u337
   387     071C  0BB0               	decfsz	??_main+2,f
   388     071D  2F18               	goto	u337
   389     071E  2EF4               	goto	l35
   390     071F  120A  118A  2800   	ljmp	start
   391     0722                     __end_of_main:
   392                           
   393                           	psect	text1
   394     06B1                     __ptext1:	
   395 ;; *************** function _I2C_WriteData *****************
   396 ;; Defined at:
   397 ;;		line 56 in file "Main_I2c_M.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;  data            1    wreg     unsigned char 
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  data            1    0[COMMON] unsigned char 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         1       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0
   414 ;;      Totals:         1       0       0       0       0
   415 ;;Total ram usage:        1 bytes
   416 ;; Hardware stack levels used: 1
   417 ;; Hardware stack levels required when called: 1
   418 ;; This function calls:
   419 ;;		_I2C_MasterWait
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425     06B1                     _I2C_WriteData:	
   426                           ;psect for function _I2C_WriteData
   427                           
   428                           
   429                           ;incstack = 0
   430                           ; Regs used in _I2C_WriteData: [wreg+status,2+status,0+pclath+cstack]
   431                           ;I2C_WriteData@data stored from wreg
   432     06B1  00F0               	movwf	I2C_WriteData@data
   433     06B2                     l721:
   434                           
   435                           ;Main_I2c_M.c: 57:     I2C_MasterWait();
   436     06B2  120A  118A  26BC  120A  118A  	fcall	_I2C_MasterWait
   437     06B7                     l723:
   438                           
   439                           ;Main_I2c_M.c: 58:     SSPBUF = data;
   440     06B7  0870               	movf	I2C_WriteData@data,w
   441     06B8  1283               	bcf	3,5	;RP0=0, select bank0
   442     06B9  1303               	bcf	3,6	;RP1=0, select bank0
   443     06BA  0093               	movwf	19	;volatile
   444     06BB                     l53:
   445     06BB  0008               	return
   446     06BC                     __end_of_I2C_WriteData:
   447                           
   448                           	psect	text2
   449     06A8                     __ptext2:	
   450 ;; *************** function _I2C_Stop *****************
   451 ;; Defined at:
   452 ;;		line 71 in file "Main_I2c_M.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used: 1
   472 ;; Hardware stack levels required when called: 1
   473 ;; This function calls:
   474 ;;		_I2C_MasterWait
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480     06A8                     _I2C_Stop:	
   481                           ;psect for function _I2C_Stop
   482                           
   483     06A8                     l725:	
   484                           ;incstack = 0
   485                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
   486                           
   487                           
   488                           ;Main_I2c_M.c: 72:     I2C_MasterWait();
   489     06A8  120A  118A  26BC  120A  118A  	fcall	_I2C_MasterWait
   490     06AD                     l727:
   491                           
   492                           ;Main_I2c_M.c: 73:     PEN = 1;
   493     06AD  1683               	bsf	3,5	;RP0=1, select bank1
   494     06AE  1303               	bcf	3,6	;RP1=0, select bank1
   495     06AF  1511               	bsf	17,2	;volatile
   496     06B0                     l59:
   497     06B0  0008               	return
   498     06B1                     __end_of_I2C_Stop:
   499                           
   500                           	psect	text3
   501     069F                     __ptext3:	
   502 ;; *************** function _I2C_Start *****************
   503 ;; Defined at:
   504 ;;		line 52 in file "Main_I2c_M.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 1
   525 ;; This function calls:
   526 ;;		_I2C_MasterWait
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532     069F                     _I2C_Start:	
   533                           ;psect for function _I2C_Start
   534                           
   535     069F                     l717:	
   536                           ;incstack = 0
   537                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   538                           
   539                           
   540                           ;Main_I2c_M.c: 53:     I2C_MasterWait();
   541     069F  120A  118A  26BC  120A  118A  	fcall	_I2C_MasterWait
   542     06A4                     l719:
   543                           
   544                           ;Main_I2c_M.c: 54:     SEN = 1;
   545     06A4  1683               	bsf	3,5	;RP0=1, select bank1
   546     06A5  1303               	bcf	3,6	;RP1=0, select bank1
   547     06A6  1411               	bsf	17,0	;volatile
   548     06A7                     l50:
   549     06A7  0008               	return
   550     06A8                     __end_of_I2C_Start:
   551                           
   552                           	psect	text4
   553     06BC                     __ptext4:	
   554 ;; *************** function _I2C_MasterWait *****************
   555 ;; Defined at:
   556 ;;		line 48 in file "Main_I2c_M.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_I2C_Start
   580 ;;		_I2C_WriteData
   581 ;;		_I2C_Stop
   582 ;;		_I2C_ReadData
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586     06BC                     _I2C_MasterWait:	
   587                           ;psect for function _I2C_MasterWait
   588                           
   589     06BC                     l651:	
   590                           ;incstack = 0
   591                           ; Regs used in _I2C_MasterWait: [wreg+status,2]
   592                           
   593     06BC                     l44:	
   594                           ;Main_I2c_M.c: 49:     while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   595                           
   596     06BC  1683               	bsf	3,5	;RP0=1, select bank1
   597     06BD  1303               	bcf	3,6	;RP1=0, select bank1
   598     06BE  1914               	btfsc	20,2	;volatile
   599     06BF  2EC1               	goto	u11
   600     06C0  2EC2               	goto	u10
   601     06C1                     u11:
   602     06C1  2EBC               	goto	l44
   603     06C2                     u10:
   604     06C2                     l653:
   605     06C2  0811               	movf	17,w	;volatile
   606     06C3  391F               	andlw	31
   607     06C4  1D03               	btfss	3,2
   608     06C5  2EC7               	goto	u21
   609     06C6  2EC8               	goto	u20
   610     06C7                     u21:
   611     06C7  2EBC               	goto	l44
   612     06C8                     u20:
   613     06C8                     l47:
   614     06C8  0008               	return
   615     06C9                     __end_of_I2C_MasterWait:
   616                           
   617                           	psect	text5
   618     0722                     __ptext5:	
   619 ;; *************** function _I2C_Initialize *****************
   620 ;; Defined at:
   621 ;;		line 42 in file "Main_I2c_M.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  c               1    wreg     unsigned char 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  c               1    9[BANK0 ] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       1       0       0       0
   637 ;;      Temps:          0       2       0       0       0
   638 ;;      Totals:         0       3       0       0       0
   639 ;;Total ram usage:        3 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 1
   642 ;; This function calls:
   643 ;;		___aldiv
   644 ;;		___wmul
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650     0722                     _I2C_Initialize:	
   651                           ;psect for function _I2C_Initialize
   652                           
   653                           
   654                           ;incstack = 0
   655                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
   656                           ;I2C_Initialize@c stored from wreg
   657     0722  1283               	bcf	3,5	;RP0=0, select bank0
   658     0723  1303               	bcf	3,6	;RP1=0, select bank0
   659     0724  00A9               	movwf	I2C_Initialize@c
   660     0725                     l801:
   661                           
   662                           ;Main_I2c_M.c: 43:     SSPCON = 0x28;
   663     0725  3028               	movlw	40
   664     0726  0094               	movwf	20	;volatile
   665     0727                     l803:
   666                           
   667                           ;Main_I2c_M.c: 44:     SSPCON2 = 0x00;
   668     0727  1683               	bsf	3,5	;RP0=1, select bank1
   669     0728  1303               	bcf	3,6	;RP1=0, select bank1
   670     0729  0191               	clrf	17	;volatile
   671     072A                     l805:
   672                           
   673                           ;Main_I2c_M.c: 45:     SSPADD = (((8000000)/(4*c*100))-1);
   674     072A  3064               	movlw	100
   675     072B  00F2               	movwf	___wmul@multiplicand
   676     072C  3000               	movlw	0
   677     072D  00F3               	movwf	___wmul@multiplicand+1
   678     072E  1283               	bcf	3,5	;RP0=0, select bank0
   679     072F  1303               	bcf	3,6	;RP1=0, select bank0
   680     0730  0829               	movf	I2C_Initialize@c,w
   681     0731  00A7               	movwf	??_I2C_Initialize
   682     0732  01A8               	clrf	??_I2C_Initialize+1
   683     0733  1003               	clrc
   684     0734  0DA7               	rlf	??_I2C_Initialize,f
   685     0735  0DA8               	rlf	??_I2C_Initialize+1,f
   686     0736  1003               	clrc
   687     0737  0DA7               	rlf	??_I2C_Initialize,f
   688     0738  0DA8               	rlf	??_I2C_Initialize+1,f
   689     0739  0827               	movf	??_I2C_Initialize,w
   690     073A  00F0               	movwf	___wmul@multiplier
   691     073B  0828               	movf	??_I2C_Initialize+1,w
   692     073C  00F1               	movwf	___wmul@multiplier+1
   693     073D  120A  118A  26C9  120A  118A  	fcall	___wmul
   694     0742  0870               	movf	?___wmul,w
   695     0743  00F6               	movwf	___aldiv@divisor
   696     0744  0871               	movf	?___wmul+1,w
   697     0745  00F7               	movwf	___aldiv@divisor+1
   698     0746  3000               	movlw	0
   699     0747  1BF7               	btfsc	___aldiv@divisor+1,7
   700     0748  30FF               	movlw	255
   701     0749  00F8               	movwf	___aldiv@divisor+2
   702     074A  00F9               	movwf	___aldiv@divisor+3
   703     074B  3000               	movlw	0
   704     074C  00FD               	movwf	___aldiv@dividend+3
   705     074D  307A               	movlw	122
   706     074E  00FC               	movwf	___aldiv@dividend+2
   707     074F  3012               	movlw	18
   708     0750  00FB               	movwf	___aldiv@dividend+1
   709     0751  3000               	movlw	0
   710     0752  00FA               	movwf	___aldiv@dividend
   711     0753  120A  118A  275F  120A  118A  	fcall	___aldiv
   712     0758  0876               	movf	?___aldiv,w
   713     0759  3EFF               	addlw	255
   714     075A  1683               	bsf	3,5	;RP0=1, select bank1
   715     075B  1303               	bcf	3,6	;RP1=0, select bank1
   716     075C  0093               	movwf	19	;volatile
   717     075D                     l807:
   718                           
   719                           ;Main_I2c_M.c: 46:     SSPSTAT = 0;
   720     075D  0194               	clrf	20	;volatile
   721     075E                     l41:
   722     075E  0008               	return
   723     075F                     __end_of_I2C_Initialize:
   724                           
   725                           	psect	text6
   726     06C9                     __ptext6:	
   727 ;; *************** function ___wmul *****************
   728 ;; Defined at:
   729 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  multiplier      2    0[COMMON] unsigned int 
   732 ;;  multiplicand    2    2[COMMON] unsigned int 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  product         2    4[COMMON] unsigned int 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  2    0[COMMON] unsigned int 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         4       0       0       0       0
   745 ;;      Locals:         2       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         6       0       0       0       0
   748 ;;Total ram usage:        6 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_I2C_Initialize
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     06C9                     ___wmul:	
   758                           ;psect for function ___wmul
   759                           
   760     06C9                     l747:	
   761                           ;incstack = 0
   762                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   763                           
   764     06C9  01F4               	clrf	___wmul@product
   765     06CA  01F5               	clrf	___wmul@product+1
   766     06CB                     l749:
   767     06CB  1C70               	btfss	___wmul@multiplier,0
   768     06CC  2ECE               	goto	u191
   769     06CD  2ECF               	goto	u190
   770     06CE                     u191:
   771     06CE  2ED5               	goto	l145
   772     06CF                     u190:
   773     06CF                     l751:
   774     06CF  0872               	movf	___wmul@multiplicand,w
   775     06D0  07F4               	addwf	___wmul@product,f
   776     06D1  1803               	skipnc
   777     06D2  0AF5               	incf	___wmul@product+1,f
   778     06D3  0873               	movf	___wmul@multiplicand+1,w
   779     06D4  07F5               	addwf	___wmul@product+1,f
   780     06D5                     l145:
   781     06D5  3001               	movlw	1
   782     06D6                     u205:
   783     06D6  1003               	clrc
   784     06D7  0DF2               	rlf	___wmul@multiplicand,f
   785     06D8  0DF3               	rlf	___wmul@multiplicand+1,f
   786     06D9  3EFF               	addlw	-1
   787     06DA  1D03               	skipz
   788     06DB  2ED6               	goto	u205
   789     06DC                     l753:
   790     06DC  3001               	movlw	1
   791     06DD                     u215:
   792     06DD  1003               	clrc
   793     06DE  0CF1               	rrf	___wmul@multiplier+1,f
   794     06DF  0CF0               	rrf	___wmul@multiplier,f
   795     06E0  3EFF               	addlw	-1
   796     06E1  1D03               	skipz
   797     06E2  2EDD               	goto	u215
   798     06E3                     l755:
   799     06E3  0870               	movf	___wmul@multiplier,w
   800     06E4  0471               	iorwf	___wmul@multiplier+1,w
   801     06E5  1D03               	btfss	3,2
   802     06E6  2EE8               	goto	u221
   803     06E7  2EE9               	goto	u220
   804     06E8                     u221:
   805     06E8  2ECB               	goto	l749
   806     06E9                     u220:
   807     06E9                     l757:
   808     06E9  0875               	movf	___wmul@product+1,w
   809     06EA  00F1               	movwf	?___wmul+1
   810     06EB  0874               	movf	___wmul@product,w
   811     06EC  00F0               	movwf	?___wmul
   812     06ED                     l147:
   813     06ED  0008               	return
   814     06EE                     __end_of___wmul:
   815                           
   816                           	psect	text7
   817     075F                     __ptext7:	
   818 ;; *************** function ___aldiv *****************
   819 ;; Defined at:
   820 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  divisor         4    6[COMMON] long 
   823 ;;  dividend        4   10[COMMON] long 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  quotient        4    3[BANK0 ] long 
   826 ;;  sign            1    2[BANK0 ] unsigned char 
   827 ;;  counter         1    1[BANK0 ] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  4    6[COMMON] long 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         8       0       0       0       0
   838 ;;      Locals:         0       6       0       0       0
   839 ;;      Temps:          0       1       0       0       0
   840 ;;      Totals:         8       7       0       0       0
   841 ;;Total ram usage:       15 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_I2C_Initialize
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850     075F                     ___aldiv:	
   851                           ;psect for function ___aldiv
   852                           
   853     075F                     l761:	
   854                           ;incstack = 0
   855                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   856                           
   857     075F  1283               	bcf	3,5	;RP0=0, select bank0
   858     0760  1303               	bcf	3,6	;RP1=0, select bank0
   859     0761  01A2               	clrf	___aldiv@sign
   860     0762                     l763:
   861     0762  1FF9               	btfss	___aldiv@divisor+3,7
   862     0763  2F65               	goto	u231
   863     0764  2F66               	goto	u230
   864     0765                     u231:
   865     0765  2F73               	goto	l210
   866     0766                     u230:
   867     0766                     l765:
   868     0766  09F6               	comf	___aldiv@divisor,f
   869     0767  09F7               	comf	___aldiv@divisor+1,f
   870     0768  09F8               	comf	___aldiv@divisor+2,f
   871     0769  09F9               	comf	___aldiv@divisor+3,f
   872     076A  0AF6               	incf	___aldiv@divisor,f
   873     076B  1903               	skipnz
   874     076C  0AF7               	incf	___aldiv@divisor+1,f
   875     076D  1903               	skipnz
   876     076E  0AF8               	incf	___aldiv@divisor+2,f
   877     076F  1903               	skipnz
   878     0770  0AF9               	incf	___aldiv@divisor+3,f
   879     0771  01A2               	clrf	___aldiv@sign
   880     0772  0AA2               	incf	___aldiv@sign,f
   881     0773                     l210:
   882     0773  1FFD               	btfss	___aldiv@dividend+3,7
   883     0774  2F76               	goto	u241
   884     0775  2F77               	goto	u240
   885     0776                     u241:
   886     0776  2F86               	goto	l771
   887     0777                     u240:
   888     0777                     l767:
   889     0777  09FA               	comf	___aldiv@dividend,f
   890     0778  09FB               	comf	___aldiv@dividend+1,f
   891     0779  09FC               	comf	___aldiv@dividend+2,f
   892     077A  09FD               	comf	___aldiv@dividend+3,f
   893     077B  0AFA               	incf	___aldiv@dividend,f
   894     077C  1903               	skipnz
   895     077D  0AFB               	incf	___aldiv@dividend+1,f
   896     077E  1903               	skipnz
   897     077F  0AFC               	incf	___aldiv@dividend+2,f
   898     0780  1903               	skipnz
   899     0781  0AFD               	incf	___aldiv@dividend+3,f
   900     0782                     l769:
   901     0782  3001               	movlw	1
   902     0783  00A0               	movwf	??___aldiv
   903     0784  0820               	movf	??___aldiv,w
   904     0785  06A2               	xorwf	___aldiv@sign,f
   905     0786                     l771:
   906     0786  3000               	movlw	0
   907     0787  00A6               	movwf	___aldiv@quotient+3
   908     0788  3000               	movlw	0
   909     0789  00A5               	movwf	___aldiv@quotient+2
   910     078A  3000               	movlw	0
   911     078B  00A4               	movwf	___aldiv@quotient+1
   912     078C  3000               	movlw	0
   913     078D  00A3               	movwf	___aldiv@quotient
   914     078E                     l773:
   915     078E  0879               	movf	___aldiv@divisor+3,w
   916     078F  0478               	iorwf	___aldiv@divisor+2,w
   917     0790  0477               	iorwf	___aldiv@divisor+1,w
   918     0791  0476               	iorwf	___aldiv@divisor,w
   919     0792  1903               	skipnz
   920     0793  2F95               	goto	u251
   921     0794  2F96               	goto	u250
   922     0795                     u251:
   923     0795  2FE3               	goto	l793
   924     0796                     u250:
   925     0796                     l775:
   926     0796  01A1               	clrf	___aldiv@counter
   927     0797  0AA1               	incf	___aldiv@counter,f
   928     0798  2FA6               	goto	l779
   929     0799                     l777:
   930     0799  3001               	movlw	1
   931     079A  00A0               	movwf	??___aldiv
   932     079B                     u265:
   933     079B  1003               	clrc
   934     079C  0DF6               	rlf	___aldiv@divisor,f
   935     079D  0DF7               	rlf	___aldiv@divisor+1,f
   936     079E  0DF8               	rlf	___aldiv@divisor+2,f
   937     079F  0DF9               	rlf	___aldiv@divisor+3,f
   938     07A0  0BA0               	decfsz	??___aldiv,f
   939     07A1  2F9B               	goto	u265
   940     07A2  3001               	movlw	1
   941     07A3  00A0               	movwf	??___aldiv
   942     07A4  0820               	movf	??___aldiv,w
   943     07A5  07A1               	addwf	___aldiv@counter,f
   944     07A6                     l779:
   945     07A6  1FF9               	btfss	___aldiv@divisor+3,7
   946     07A7  2FA9               	goto	u271
   947     07A8  2FAA               	goto	u270
   948     07A9                     u271:
   949     07A9  2F99               	goto	l777
   950     07AA                     u270:
   951     07AA                     l781:
   952     07AA  3001               	movlw	1
   953     07AB  00A0               	movwf	??___aldiv
   954     07AC                     u285:
   955     07AC  1003               	clrc
   956     07AD  0DA3               	rlf	___aldiv@quotient,f
   957     07AE  0DA4               	rlf	___aldiv@quotient+1,f
   958     07AF  0DA5               	rlf	___aldiv@quotient+2,f
   959     07B0  0DA6               	rlf	___aldiv@quotient+3,f
   960     07B1  0BA0               	decfsz	??___aldiv,f
   961     07B2  2FAC               	goto	u285
   962     07B3                     l783:
   963     07B3  0879               	movf	___aldiv@divisor+3,w
   964     07B4  027D               	subwf	___aldiv@dividend+3,w
   965     07B5  1D03               	skipz
   966     07B6  2FC1               	goto	u295
   967     07B7  0878               	movf	___aldiv@divisor+2,w
   968     07B8  027C               	subwf	___aldiv@dividend+2,w
   969     07B9  1D03               	skipz
   970     07BA  2FC1               	goto	u295
   971     07BB  0877               	movf	___aldiv@divisor+1,w
   972     07BC  027B               	subwf	___aldiv@dividend+1,w
   973     07BD  1D03               	skipz
   974     07BE  2FC1               	goto	u295
   975     07BF  0876               	movf	___aldiv@divisor,w
   976     07C0  027A               	subwf	___aldiv@dividend,w
   977     07C1                     u295:
   978     07C1  1C03               	skipc
   979     07C2  2FC4               	goto	u291
   980     07C3  2FC5               	goto	u290
   981     07C4                     u291:
   982     07C4  2FD4               	goto	l789
   983     07C5                     u290:
   984     07C5                     l785:
   985     07C5  0876               	movf	___aldiv@divisor,w
   986     07C6  02FA               	subwf	___aldiv@dividend,f
   987     07C7  0877               	movf	___aldiv@divisor+1,w
   988     07C8  1C03               	skipc
   989     07C9  0F77               	incfsz	___aldiv@divisor+1,w
   990     07CA  02FB               	subwf	___aldiv@dividend+1,f
   991     07CB  0878               	movf	___aldiv@divisor+2,w
   992     07CC  1C03               	skipc
   993     07CD  0F78               	incfsz	___aldiv@divisor+2,w
   994     07CE  02FC               	subwf	___aldiv@dividend+2,f
   995     07CF  0879               	movf	___aldiv@divisor+3,w
   996     07D0  1C03               	skipc
   997     07D1  0F79               	incfsz	___aldiv@divisor+3,w
   998     07D2  02FD               	subwf	___aldiv@dividend+3,f
   999     07D3                     l787:
  1000     07D3  1423               	bsf	___aldiv@quotient,0
  1001     07D4                     l789:
  1002     07D4  3001               	movlw	1
  1003     07D5                     u305:
  1004     07D5  1003               	clrc
  1005     07D6  0CF9               	rrf	___aldiv@divisor+3,f
  1006     07D7  0CF8               	rrf	___aldiv@divisor+2,f
  1007     07D8  0CF7               	rrf	___aldiv@divisor+1,f
  1008     07D9  0CF6               	rrf	___aldiv@divisor,f
  1009     07DA  3EFF               	addlw	-1
  1010     07DB  1D03               	skipz
  1011     07DC  2FD5               	goto	u305
  1012     07DD                     l791:
  1013     07DD  3001               	movlw	1
  1014     07DE  02A1               	subwf	___aldiv@counter,f
  1015     07DF  1D03               	btfss	3,2
  1016     07E0  2FE2               	goto	u311
  1017     07E1  2FE3               	goto	u310
  1018     07E2                     u311:
  1019     07E2  2FAA               	goto	l781
  1020     07E3                     u310:
  1021     07E3                     l793:
  1022     07E3  0822               	movf	___aldiv@sign,w
  1023     07E4  1903               	btfsc	3,2
  1024     07E5  2FE7               	goto	u321
  1025     07E6  2FE8               	goto	u320
  1026     07E7                     u321:
  1027     07E7  2FF3               	goto	l797
  1028     07E8                     u320:
  1029     07E8                     l795:
  1030     07E8  09A3               	comf	___aldiv@quotient,f
  1031     07E9  09A4               	comf	___aldiv@quotient+1,f
  1032     07EA  09A5               	comf	___aldiv@quotient+2,f
  1033     07EB  09A6               	comf	___aldiv@quotient+3,f
  1034     07EC  0AA3               	incf	___aldiv@quotient,f
  1035     07ED  1903               	skipnz
  1036     07EE  0AA4               	incf	___aldiv@quotient+1,f
  1037     07EF  1903               	skipnz
  1038     07F0  0AA5               	incf	___aldiv@quotient+2,f
  1039     07F1  1903               	skipnz
  1040     07F2  0AA6               	incf	___aldiv@quotient+3,f
  1041     07F3                     l797:
  1042     07F3  0826               	movf	___aldiv@quotient+3,w
  1043     07F4  00F9               	movwf	?___aldiv+3
  1044     07F5  0825               	movf	___aldiv@quotient+2,w
  1045     07F6  00F8               	movwf	?___aldiv+2
  1046     07F7  0824               	movf	___aldiv@quotient+1,w
  1047     07F8  00F7               	movwf	?___aldiv+1
  1048     07F9  0823               	movf	___aldiv@quotient,w
  1049     07FA  00F6               	movwf	?___aldiv
  1050     07FB                     l220:
  1051     07FB  0008               	return
  1052     07FC                     __end_of___aldiv:
  1053     007E                     btemp	set	126	;btemp
  1054     007E                     wtemp0	set	126
  1055                           
  1056                           	psect	idloc
  1057                           
  1058                           ;Config register IDLOC0 @ 0x2000
  1059                           ;	unspecified, using default values
  1060     2000                     	org	8192
  1061     2000  3FFF               	dw	16383
  1062                           
  1063                           ;Config register IDLOC1 @ 0x2001
  1064                           ;	unspecified, using default values
  1065     2001                     	org	8193
  1066     2001  3FFF               	dw	16383
  1067                           
  1068                           ;Config register IDLOC2 @ 0x2002
  1069                           ;	unspecified, using default values
  1070     2002                     	org	8194
  1071     2002  3FFF               	dw	16383
  1072                           
  1073                           ;Config register IDLOC3 @ 0x2003
  1074                           ;	unspecified, using default values
  1075     2003                     	org	8195
  1076     2003  3FFF               	dw	16383
  1077                           
  1078                           	psect	config
  1079                           
  1080                           ;Config register CONFIG @ 0x2007
  1081                           ;	Oscillator Selection bits
  1082                           ;	FOSC = EXTRC, RC oscillator
  1083                           ;	Watchdog Timer Enable bit
  1084                           ;	WDTE = OFF, WDT disabled
  1085                           ;	Power-up Timer Enable bit
  1086                           ;	PWRTE = OFF, PWRT disabled
  1087                           ;	Brown-out Reset Enable bit
  1088                           ;	BOREN = OFF, BOR disabled
  1089                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1090                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1091                           ;	Data EEPROM Memory Code Protection bit
  1092                           ;	CPD = OFF, Data EEPROM code protection off
  1093                           ;	Flash Program Memory Write Enable bits
  1094                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1095                           ;	In-Circuit Debugger Mode bit
  1096                           ;	DEBUG = 0x1, unprogrammed default
  1097                           ;	Flash Program Memory Code Protection bit
  1098                           ;	CP = OFF, Code protection off
  1099     2007                     	org	8199
  1100     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_Initialize->___aldiv
    ___aldiv->___wmul

Critical Paths under _main in BANK0

    _main->_I2C_Initialize
    _I2C_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4     733
                                             10 BANK0      7     3      4
                     _I2C_Initialize
                          _I2C_Start
                           _I2C_Stop
                      _I2C_WriteData
 ---------------------------------------------------------------------------------
 (1) _I2C_WriteData                                        1     1      0      15
                                              0 COMMON     1     1      0
                     _I2C_MasterWait
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                     _I2C_MasterWait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                     _I2C_MasterWait
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       3     3      0     718
                                              7 BANK0      3     3      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              6 COMMON     8     0      8
                                              0 BANK0      7     7      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _I2C_Start
     _I2C_MasterWait
   _I2C_Stop
     _I2C_MasterWait
   _I2C_WriteData
     _I2C_MasterWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jan 22 14:39:26 2023

                     l41 075E                       l50 06A7                       l35 06F4  
                     l44 06BC                       l53 06BB                       l47 06C8  
                     l59 06B0                       u10 06C2                       u11 06C1  
                     u20 06C8                       u21 06C7      ___wmul@multiplicand 0072  
                    l210 0773                      l220 07FB                      l145 06D5  
                    l147 06ED                      l801 0725                      l721 06B2  
                    l803 0727                      l651 06BC                      l723 06B7  
                    l811 0710                      l805 072A                      l653 06C2  
                    l717 069F                      l725 06A8                      l751 06CF  
                    l807 075D                      l719 06A4                      l727 06AD  
                    l761 075F                      l753 06DC                      l809 06EE  
                    l771 0786                      l763 0762                      l755 06E3  
                    l747 06C9                      l781 07AA                      l773 078E  
                    l765 0766                      l757 06E9                      l749 06CB  
                    l791 07DD                      l783 07B3                      l775 0796  
                    l767 0777                      l785 07C5                      l777 0799  
                    l793 07E3                      l769 0782                      l795 07E8  
                    l787 07D3                      l779 07A6                      l797 07F3  
                    l789 07D4                      u220 06E9                      u221 06E8  
                    u205 06D6                      u310 07E3                      u230 0766  
                    u311 07E2                      u231 0765                      u215 06DD  
                    u320 07E8                      u240 0777                      u321 07E7  
                    u305 07D5                      u241 0776                      u250 0796  
                    u251 0795                      u270 07AA                      u190 06CF  
                    u271 07A9                      u191 06CE                      _PEN 048A  
                    u265 079B                      u337 0718                      u290 07C5  
                    u291 07C4                      u285 07AC                      u295 07C1  
                    _SEN 0488                     _RCEN 048B                     _main 06EE  
                   btemp 007E         __end_of_I2C_Stop 06B1                     start 0000  
        __end_of___aldiv 07FC                    ?_main 002A                    _ACKEN 048C  
                  _ACKDT 048D        __end_of_I2C_Start 06A8                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0722  
                 ??_main 002E                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013                ??___aldiv 0020                   ___wmul 06C9  
              ?_I2C_Stop 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          _I2C_WriteData 06B1               ??_I2C_Stop 0070           ?_I2C_WriteData 0070  
             __pmaintext 06EE                  ?___wmul 0070                  _SSPCON2 0091  
                _SSPSTAT 0094                _I2C_Start 069F                  ___aldiv 075F  
         _I2C_MasterWait 06BC           _I2C_Initialize 0722                  __ptext1 06B1  
                __ptext2 06A8                  __ptext3 069F                  __ptext4 06BC  
                __ptext5 0722                  __ptext6 06C9                  __ptext7 075F  
       ___aldiv@dividend 007A     end_of_initialization 07FC               ?_I2C_Start 0070  
        ??_I2C_WriteData 0070         ___aldiv@quotient 0023   __end_of_I2C_MasterWait 06C9  
 __end_of_I2C_Initialize 075F          ?_I2C_MasterWait 0070          ?_I2C_Initialize 0070  
         __end_of___wmul 06EE      start_initialization 07FC              ??_I2C_Start 0070  
               ??___wmul 0074                ___latbits 0002            __pcstackBANK0 0020  
               ?___aldiv 0076                 _I2C_Stop 06A8          ___aldiv@divisor 0076  
        ___aldiv@counter 0021           ___wmul@product 0074          I2C_Initialize@c 0029  
      ___wmul@multiplier 0070         ??_I2C_MasterWait 0070         ??_I2C_Initialize 0027  
  __end_of_I2C_WriteData 06BC                 main@argc 002A                 main@argv 002C  
      I2C_WriteData@data 0070             ___aldiv@sign 0022  
