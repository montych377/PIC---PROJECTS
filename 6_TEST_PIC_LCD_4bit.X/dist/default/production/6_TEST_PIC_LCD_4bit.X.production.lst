

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 19 14:14:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0007                     _PORTCbits	set	7
   172     0007                     _PORTC	set	7
   173     0008                     _PORTD	set	8
   174     0038                     _RC0	set	56
   175     0087                     _TRISC	set	135
   176     0088                     _TRISD	set	136
   177                           
   178                           	psect	strings
   179     0003                     __pstrings:
   180     0003                     stringtab:
   181     0003                     __stringtab:
   182     0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185     0003                     stringdir:
   186     0003  3000               	movlw	high stringdir
   187     0004  008A               	movwf	10
   188     0005  0804               	movf	4,w
   189     0006  0A84               	incf	4,f
   190     0007  0782               	addwf	2,f
   191     0008                     __stringbase:
   192     0008  3400               	retlw	0
   193     0009                     __end_of__stringtab:
   194     0009                     STR_1:
   195     0009  3448               	retlw	72	;'H'
   196     000A  3465               	retlw	101	;'e'
   197     000B  346C               	retlw	108	;'l'
   198     000C  346C               	retlw	108	;'l'
   199     000D  346F               	retlw	111	;'o'
   200     000E  3420               	retlw	32	;' '
   201     000F  3457               	retlw	87	;'W'
   202     0010  346F               	retlw	111	;'o'
   203     0011  3472               	retlw	114	;'r'
   204     0012  346C               	retlw	108	;'l'
   205     0013  3464               	retlw	100	;'d'
   206     0014  3420               	retlw	32	;' '
   207     0015  3421               	retlw	33	;'!'
   208     0016  3400               	retlw	0
   209                           
   210                           	psect	cinit
   211     07FC                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07FC                     __initialization:
   215     07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     07FC                     __end_of__initialization:
   219     07FC  0183               	clrf	3
   220     07FD  120A  118A  2F1C   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	cstackCOMMON
   223     0070                     __pcstackCOMMON:
   224     0070                     ?_lcd_cmd:
   225     0070                     ??_lcd_cmd:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     ?_lcd_data:	
   229                           ; 1 bytes @ 0x0
   230                           
   231     0070                     ??_lcd_data:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     ?_lcd_str:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0070                     ?_lcd_init:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ?_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 2 bytes @ 0x0
   245     0070                     	ds	1
   246     0071                     lcd_data@data:
   247                           
   248                           ; 1 bytes @ 0x1
   249     0071                     	ds	1
   250     0072                     ??_lcd_str:
   251     0072                     lcd_cmd@cmd:	
   252                           ; 1 bytes @ 0x2
   253                           
   254                           
   255                           ; 1 bytes @ 0x2
   256     0072                     	ds	1
   257     0073                     ??_lcd_init:
   258     0073                     lcd_str@ptr:	
   259                           ; 1 bytes @ 0x3
   260                           
   261                           
   262                           ; 1 bytes @ 0x3
   263     0073                     	ds	1
   264     0074                     ??_main:
   265                           
   266                           	psect	maintext
   267     071C                     __pmaintext:	
   268                           ; 1 bytes @ 0x4
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 63 in file "main_lcd_4.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  2   33[None  ] int 
   281 ;; Registers used:
   282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0
   291 ;;      Totals:         0       0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called: 2
   294 ;; This function calls:
   295 ;;		_lcd_cmd
   296 ;;		_lcd_init
   297 ;;		_lcd_str
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303     071C                     _main:	
   304                           ;psect for function _main
   305                           
   306     071C                     l703:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   309                           
   310                           
   311                           ;main_lcd_4.c: 64:     TRISD = 0x00;
   312     071C  1683               	bsf	3,5	;RP0=1, select bank1
   313     071D  1303               	bcf	3,6	;RP1=0, select bank1
   314     071E  0188               	clrf	8	;volatile
   315                           
   316                           ;main_lcd_4.c: 65:     TRISC = 0x00;
   317     071F  0187               	clrf	7	;volatile
   318     0720                     l705:
   319                           
   320                           ;main_lcd_4.c: 67:     lcd_init();
   321     0720  120A  118A  2735  120A  118A  	fcall	_lcd_init
   322     0725                     l707:
   323                           
   324                           ;main_lcd_4.c: 68:     lcd_cmd(0x80);
   325     0725  3080               	movlw	128
   326     0726  120A  118A  27A8  120A  118A  	fcall	_lcd_cmd
   327     072B                     l709:
   328                           
   329                           ;main_lcd_4.c: 69:     lcd_str("Hello World !");
   330     072B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   331     072C  120A  118A  2754  120A  118A  	fcall	_lcd_str
   332     0731                     l34:	
   333                           ;main_lcd_4.c: 71:     while(1){
   334                           
   335     0731                     l35:	
   336                           ;main_lcd_4.c: 73:     }
   337                           
   338     0731  2F31               	goto	l34
   339     0732  120A  118A  2800   	ljmp	start
   340     0735                     __end_of_main:
   341                           
   342                           	psect	text1
   343     0754                     __ptext1:	
   344 ;; *************** function _lcd_str *****************
   345 ;; Defined at:
   346 ;;		line 49 in file "main_lcd_4.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;  ptr             1    wreg     PTR unsigned char 
   349 ;;		 -> STR_1(14), 
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  ptr             1    3[COMMON] PTR unsigned char 
   352 ;;		 -> STR_1(14), 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         1       0       0       0       0
   364 ;;      Temps:          1       0       0       0       0
   365 ;;      Totals:         2       0       0       0       0
   366 ;;Total ram usage:        2 bytes
   367 ;; Hardware stack levels used: 1
   368 ;; Hardware stack levels required when called: 1
   369 ;; This function calls:
   370 ;;		_lcd_data
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376     0754                     _lcd_str:	
   377                           ;psect for function _lcd_str
   378                           
   379                           
   380                           ;incstack = 0
   381                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   382                           ;lcd_str@ptr stored from wreg
   383     0754  00F3               	movwf	lcd_str@ptr
   384     0755                     l695:
   385                           
   386                           ;main_lcd_4.c: 50:    while(*ptr){
   387     0755  2F66               	goto	l701
   388     0756                     l697:
   389                           
   390                           ;main_lcd_4.c: 51:         lcd_data(*ptr++);
   391     0756  0873               	movf	lcd_str@ptr,w
   392     0757  0084               	movwf	4
   393     0758  120A  118A  2003  120A  118A  	fcall	stringdir
   394     075D  120A  118A  2773  120A  118A  	fcall	_lcd_data
   395     0762                     l699:
   396     0762  3001               	movlw	1
   397     0763  00F2               	movwf	??_lcd_str
   398     0764  0872               	movf	??_lcd_str,w
   399     0765  07F3               	addwf	lcd_str@ptr,f
   400     0766                     l701:
   401                           
   402                           ;main_lcd_4.c: 50:    while(*ptr){
   403     0766  0873               	movf	lcd_str@ptr,w
   404     0767  0084               	movwf	4
   405     0768  120A  118A  2003  120A  118A  	fcall	stringdir
   406     076D  3A00               	xorlw	0
   407     076E  1D03               	skipz
   408     076F  2F71               	goto	u61
   409     0770  2F72               	goto	u60
   410     0771                     u61:
   411     0771  2F56               	goto	l697
   412     0772                     u60:
   413     0772                     l26:
   414     0772  0008               	return
   415     0773                     __end_of_lcd_str:
   416                           
   417                           	psect	text2
   418     0773                     __ptext2:	
   419 ;; *************** function _lcd_data *****************
   420 ;; Defined at:
   421 ;;		line 34 in file "main_lcd_4.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  data            1    wreg     unsigned char 
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  data            1    1[COMMON] unsigned char 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         1       0       0       0       0
   437 ;;      Temps:          1       0       0       0       0
   438 ;;      Totals:         2       0       0       0       0
   439 ;;Total ram usage:        2 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_lcd_str
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448     0773                     _lcd_data:	
   449                           ;psect for function _lcd_data
   450                           
   451                           
   452                           ;incstack = 0
   453                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   454                           ;lcd_data@data stored from wreg
   455     0773  00F1               	movwf	lcd_data@data
   456     0774                     l653:
   457                           
   458                           ;main_lcd_4.c: 35:     PORTD = data & 0xf0;
   459     0774  0871               	movf	lcd_data@data,w
   460     0775  39F0               	andlw	240
   461     0776  1283               	bcf	3,5	;RP0=0, select bank0
   462     0777  1303               	bcf	3,6	;RP1=0, select bank0
   463     0778  0088               	movwf	8	;volatile
   464     0779                     l655:
   465                           
   466                           ;main_lcd_4.c: 36:     PORTC |= 0x01;
   467     0779  1407               	bsf	7,0	;volatile
   468     077A                     l657:
   469                           
   470                           ;main_lcd_4.c: 37:     PORTC &= ~0x02;
   471     077A  30FD               	movlw	253
   472     077B  00F0               	movwf	??_lcd_data
   473     077C  0870               	movf	??_lcd_data,w
   474     077D  0587               	andwf	7,f	;volatile
   475     077E                     l659:
   476                           
   477                           ;main_lcd_4.c: 38:     PORTC |= 0x04;
   478     077E  1507               	bsf	7,2	;volatile
   479     077F                     l661:
   480                           
   481                           ;main_lcd_4.c: 39:     _delay((unsigned long)((3)*(1000000/4000.0)));
   482     077F  30F9               	movlw	249
   483     0780  00F0               	movwf	??_lcd_data
   484     0781                     u77:
   485     0781  0BF0               	decfsz	??_lcd_data,f
   486     0782  2F81               	goto	u77
   487     0783  2F84               	nop2
   488     0784                     l663:
   489                           
   490                           ;main_lcd_4.c: 40:     PORTC &= ~0x04;
   491     0784  30FB               	movlw	251
   492     0785  00F0               	movwf	??_lcd_data
   493     0786  0870               	movf	??_lcd_data,w
   494     0787  1283               	bcf	3,5	;RP0=0, select bank0
   495     0788  1303               	bcf	3,6	;RP1=0, select bank0
   496     0789  0587               	andwf	7,f	;volatile
   497     078A                     l665:
   498                           
   499                           ;main_lcd_4.c: 42:     PORTD = (data<<4) & 0xf0;
   500     078A  0871               	movf	lcd_data@data,w
   501     078B  00F0               	movwf	??_lcd_data
   502     078C  3003               	movlw	3
   503     078D                     u45:
   504     078D  1003               	clrc
   505     078E  0DF0               	rlf	??_lcd_data,f
   506     078F  3EFF               	addlw	-1
   507     0790  1D03               	skipz
   508     0791  2F8D               	goto	u45
   509     0792  1003               	clrc
   510     0793  0D70               	rlf	??_lcd_data,w
   511     0794  39F0               	andlw	240
   512     0795  0088               	movwf	8	;volatile
   513     0796                     l667:
   514                           
   515                           ;main_lcd_4.c: 43:     PORTC |= 0x01;
   516     0796  1407               	bsf	7,0	;volatile
   517     0797                     l669:
   518                           
   519                           ;main_lcd_4.c: 44:     PORTC &= ~0x02;
   520     0797  30FD               	movlw	253
   521     0798  00F0               	movwf	??_lcd_data
   522     0799  0870               	movf	??_lcd_data,w
   523     079A  0587               	andwf	7,f	;volatile
   524     079B                     l671:
   525                           
   526                           ;main_lcd_4.c: 45:     PORTC |= 0x04;
   527     079B  1507               	bsf	7,2	;volatile
   528     079C                     l673:
   529                           
   530                           ;main_lcd_4.c: 46:     _delay((unsigned long)((3)*(1000000/4000.0)));
   531     079C  30F9               	movlw	249
   532     079D  00F0               	movwf	??_lcd_data
   533     079E                     u87:
   534     079E  0BF0               	decfsz	??_lcd_data,f
   535     079F  2F9E               	goto	u87
   536     07A0  2FA1               	nop2
   537     07A1                     l675:
   538                           
   539                           ;main_lcd_4.c: 47:     PORTC &= ~0x04;
   540     07A1  30FB               	movlw	251
   541     07A2  00F0               	movwf	??_lcd_data
   542     07A3  0870               	movf	??_lcd_data,w
   543     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   544     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   545     07A6  0587               	andwf	7,f	;volatile
   546     07A7                     l20:
   547     07A7  0008               	return
   548     07A8                     __end_of_lcd_data:
   549                           
   550                           	psect	text3
   551     0735                     __ptext3:	
   552 ;; *************** function _lcd_init *****************
   553 ;; Defined at:
   554 ;;		line 54 in file "main_lcd_4.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 1
   575 ;; This function calls:
   576 ;;		_lcd_cmd
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582     0735                     _lcd_init:	
   583                           ;psect for function _lcd_init
   584                           
   585     0735                     l685:	
   586                           ;incstack = 0
   587                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   588                           
   589                           
   590                           ;main_lcd_4.c: 56:     lcd_cmd(0x01);
   591     0735  3001               	movlw	1
   592     0736  120A  118A  27A8  120A  118A  	fcall	_lcd_cmd
   593                           
   594                           ;main_lcd_4.c: 57:     lcd_cmd(0x02);
   595     073B  3002               	movlw	2
   596     073C  120A  118A  27A8  120A  118A  	fcall	_lcd_cmd
   597                           
   598                           ;main_lcd_4.c: 58:     lcd_cmd(0x06);
   599     0741  3006               	movlw	6
   600     0742  120A  118A  27A8  120A  118A  	fcall	_lcd_cmd
   601                           
   602                           ;main_lcd_4.c: 59:     lcd_cmd(0x28);
   603     0747  3028               	movlw	40
   604     0748  120A  118A  27A8  120A  118A  	fcall	_lcd_cmd
   605                           
   606                           ;main_lcd_4.c: 60:     lcd_cmd(0x0c);
   607     074D  300C               	movlw	12
   608     074E  120A  118A  27A8  120A  118A  	fcall	_lcd_cmd
   609     0753                     l29:
   610     0753  0008               	return
   611     0754                     __end_of_lcd_init:
   612                           
   613                           	psect	text4
   614     07A8                     __ptext4:	
   615 ;; *************** function _lcd_cmd *****************
   616 ;; Defined at:
   617 ;;		line 18 in file "main_lcd_4.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  cmd             1    wreg     unsigned char 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  cmd             1    2[COMMON] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         1       0       0       0       0
   633 ;;      Temps:          2       0       0       0       0
   634 ;;      Totals:         3       0       0       0       0
   635 ;;Total ram usage:        3 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_lcd_init
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645     07A8                     _lcd_cmd:	
   646                           ;psect for function _lcd_cmd
   647                           
   648                           
   649                           ;incstack = 0
   650                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
   651                           ;lcd_cmd@cmd stored from wreg
   652     07A8  00F2               	movwf	lcd_cmd@cmd
   653     07A9                     l629:
   654                           
   655                           ;main_lcd_4.c: 19:     PORTD = cmd & 0xf0;
   656     07A9  0872               	movf	lcd_cmd@cmd,w
   657     07AA  39F0               	andlw	240
   658     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   659     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   660     07AD  0088               	movwf	8	;volatile
   661     07AE                     l631:
   662                           
   663                           ;main_lcd_4.c: 20:     PORTC &= ~(1<<RC0);
   664     07AE  3001               	movlw	1
   665     07AF  00F0               	movwf	??_lcd_cmd
   666     07B0  3000               	movlw	0
   667     07B1  1807               	btfsc	7,0	;volatile
   668     07B2  3001               	movlw	1
   669     07B3  3E01               	addlw	1
   670     07B4  2FB7               	goto	u14
   671     07B5                     u15:
   672     07B5  1003               	clrc
   673     07B6  0DF0               	rlf	??_lcd_cmd,f
   674     07B7                     u14:
   675     07B7  3EFF               	addlw	-1
   676     07B8  1D03               	skipz
   677     07B9  2FB5               	goto	u15
   678     07BA  0870               	movf	??_lcd_cmd,w
   679     07BB  3AFF               	xorlw	255
   680     07BC  00F1               	movwf	??_lcd_cmd+1
   681     07BD  0871               	movf	??_lcd_cmd+1,w
   682     07BE  0587               	andwf	7,f	;volatile
   683     07BF                     l633:
   684                           
   685                           ;main_lcd_4.c: 21:     PORTC &= ~(1<<PORTCbits.RC1);
   686     07BF  3001               	movlw	1
   687     07C0  00F0               	movwf	??_lcd_cmd
   688     07C1  0C07               	rrf	7,w	;volatile
   689     07C2  3901               	andlw	1
   690     07C3  3E01               	addlw	1
   691     07C4  2FC7               	goto	u24
   692     07C5                     u25:
   693     07C5  1003               	clrc
   694     07C6  0DF0               	rlf	??_lcd_cmd,f
   695     07C7                     u24:
   696     07C7  3EFF               	addlw	-1
   697     07C8  1D03               	skipz
   698     07C9  2FC5               	goto	u25
   699     07CA  0870               	movf	??_lcd_cmd,w
   700     07CB  3AFF               	xorlw	255
   701     07CC  00F1               	movwf	??_lcd_cmd+1
   702     07CD  0871               	movf	??_lcd_cmd+1,w
   703     07CE  0587               	andwf	7,f	;volatile
   704     07CF                     l635:
   705                           
   706                           ;main_lcd_4.c: 22:     PORTC |= 0x04;
   707     07CF  1507               	bsf	7,2	;volatile
   708     07D0                     l637:
   709                           
   710                           ;main_lcd_4.c: 23:     _delay((unsigned long)((3)*(1000000/4000.0)));
   711     07D0  30F9               	movlw	249
   712     07D1  00F0               	movwf	??_lcd_cmd
   713     07D2                     u97:
   714     07D2  0BF0               	decfsz	??_lcd_cmd,f
   715     07D3  2FD2               	goto	u97
   716     07D4  2FD5               	nop2
   717     07D5                     l639:
   718                           
   719                           ;main_lcd_4.c: 24:     PORTC &= ~0x04;
   720     07D5  30FB               	movlw	251
   721     07D6  00F0               	movwf	??_lcd_cmd
   722     07D7  0870               	movf	??_lcd_cmd,w
   723     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   724     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   725     07DA  0587               	andwf	7,f	;volatile
   726     07DB                     l641:
   727                           
   728                           ;main_lcd_4.c: 26:     PORTD = (cmd<<4) & 0xf0;
   729     07DB  0872               	movf	lcd_cmd@cmd,w
   730     07DC  00F0               	movwf	??_lcd_cmd
   731     07DD  3003               	movlw	3
   732     07DE                     u35:
   733     07DE  1003               	clrc
   734     07DF  0DF0               	rlf	??_lcd_cmd,f
   735     07E0  3EFF               	addlw	-1
   736     07E1  1D03               	skipz
   737     07E2  2FDE               	goto	u35
   738     07E3  1003               	clrc
   739     07E4  0D70               	rlf	??_lcd_cmd,w
   740     07E5  39F0               	andlw	240
   741     07E6  0088               	movwf	8	;volatile
   742     07E7                     l643:
   743                           
   744                           ;main_lcd_4.c: 27:     PORTC &= ~0x01;
   745     07E7  30FE               	movlw	254
   746     07E8  00F0               	movwf	??_lcd_cmd
   747     07E9  0870               	movf	??_lcd_cmd,w
   748     07EA  0587               	andwf	7,f	;volatile
   749     07EB                     l645:
   750                           
   751                           ;main_lcd_4.c: 28:     PORTC &= ~0x02;
   752     07EB  30FD               	movlw	253
   753     07EC  00F0               	movwf	??_lcd_cmd
   754     07ED  0870               	movf	??_lcd_cmd,w
   755     07EE  0587               	andwf	7,f	;volatile
   756     07EF                     l647:
   757                           
   758                           ;main_lcd_4.c: 29:     PORTC |= 0x04;
   759     07EF  1507               	bsf	7,2	;volatile
   760     07F0                     l649:
   761                           
   762                           ;main_lcd_4.c: 30:     _delay((unsigned long)((3)*(1000000/4000.0)));
   763     07F0  30F9               	movlw	249
   764     07F1  00F0               	movwf	??_lcd_cmd
   765     07F2                     u107:
   766     07F2  0BF0               	decfsz	??_lcd_cmd,f
   767     07F3  2FF2               	goto	u107
   768     07F4  2FF5               	nop2
   769     07F5                     l651:
   770                           
   771                           ;main_lcd_4.c: 31:     PORTC &= ~0x04;
   772     07F5  30FB               	movlw	251
   773     07F6  00F0               	movwf	??_lcd_cmd
   774     07F7  0870               	movf	??_lcd_cmd,w
   775     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   776     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   777     07FA  0587               	andwf	7,f	;volatile
   778     07FB                     l17:
   779     07FB  0008               	return
   780     07FC                     __end_of_lcd_cmd:
   781     007E                     btemp	set	126	;btemp
   782     007E                     wtemp0	set	126
   783                           
   784                           	psect	idloc
   785                           
   786                           ;Config register IDLOC0 @ 0x2000
   787                           ;	unspecified, using default values
   788     2000                     	org	8192
   789     2000  3FFF               	dw	16383
   790                           
   791                           ;Config register IDLOC1 @ 0x2001
   792                           ;	unspecified, using default values
   793     2001                     	org	8193
   794     2001  3FFF               	dw	16383
   795                           
   796                           ;Config register IDLOC2 @ 0x2002
   797                           ;	unspecified, using default values
   798     2002                     	org	8194
   799     2002  3FFF               	dw	16383
   800                           
   801                           ;Config register IDLOC3 @ 0x2003
   802                           ;	unspecified, using default values
   803     2003                     	org	8195
   804     2003  3FFF               	dw	16383
   805                           
   806                           	psect	config
   807                           
   808                           ;Config register CONFIG @ 0x2007
   809                           ;	Oscillator Selection bits
   810                           ;	FOSC = EXTRC, RC oscillator
   811                           ;	Watchdog Timer Enable bit
   812                           ;	WDTE = OFF, WDT disabled
   813                           ;	Power-up Timer Enable bit
   814                           ;	PWRTE = OFF, PWRT disabled
   815                           ;	Brown-out Reset Enable bit
   816                           ;	BOREN = OFF, BOR disabled
   817                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   818                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   819                           ;	Data EEPROM Memory Code Protection bit
   820                           ;	CPD = OFF, Data EEPROM code protection off
   821                           ;	Flash Program Memory Write Enable bits
   822                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   823                           ;	In-Circuit Debugger Mode bit
   824                           ;	DEBUG = 0x1, unprogrammed default
   825                           ;	Flash Program Memory Code Protection bit
   826                           ;	CP = OFF, Code protection off
   827     2007                     	org	8199
   828     2007  3F3B               	dw	16187

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_str@ptr	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_lcd_str
    _lcd_str->_lcd_data
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     168
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              2     2      0     108
                                              2 COMMON     2     2      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      30
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_str
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 14:14:23 2023

                      pc 0002             lcd_data@data 0071                       l20 07A7  
                     l17 07FB                       l26 0772                       l34 0731  
                     l35 0731                       l29 0753                       u14 07B7  
                     u15 07B5                       u24 07C7                       u25 07C5  
                     u35 07DE                       u60 0772                       u45 078D  
                     u61 0771                       u77 0781                       u87 079E  
                     u97 07D2                       fsr 0004                      l701 0766  
                    l631 07AE                      l703 071C                      l641 07DB  
                    l633 07BF                      l705 0720                      l651 07F5  
                    l643 07E7                      l635 07CF                      l707 0725  
                    l645 07EB                      l637 07D0                      l629 07A9  
                    l661 077F                      l653 0774                      l709 072B  
                    l647 07EF                      l639 07D5                      l671 079B  
                    l663 0784                      l655 0779                      l649 07F0  
                    l673 079C                      l665 078A                      l657 077A  
                    l675 07A1                      l667 0796                      l659 077E  
                    l685 0735                      l669 0797                      l695 0755  
                    l697 0756                      l699 0762                      _RC0 0038  
                    u107 07F2                      fsr0 0004                     STR_1 0009  
                   _main 071C                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088          __end_of_lcd_cmd 07FC  
        __end_of_lcd_str 0773                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0735  
                 ??_main 0074         __end_of_lcd_data 07A8         __end_of_lcd_init 0754  
              ??_lcd_cmd 0070                ??_lcd_str 0072  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 071C                ?_lcd_data 0070  
              ?_lcd_init 0070               __stringtab 0003                  __ptext1 0754  
                __ptext2 0773                  __ptext3 0735                  __ptext4 07A8  
                _lcd_cmd 07A8                  _lcd_str 0754               ??_lcd_data 0070  
             ??_lcd_init 0073     end_of_initialization 07FC                _PORTCbits 0007  
             lcd_cmd@cmd 0072               lcd_str@ptr 0073      start_initialization 07FC  
              ___latbits 0002                __pstrings 0003                 ?_lcd_cmd 0070  
               ?_lcd_str 0070              __stringbase 0008       __end_of__stringtab 0009  
               _lcd_data 0773                 _lcd_init 0735                stringcode 0003  
               stringdir 0003                 stringtab 0003  
