

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 19 17:19:56 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     001A                     _RCREG	set	26
   173     0019                     _TXREG	set	25
   174     0018                     _RCSTA	set	24
   175     0065                     _RCIF	set	101
   176     00C4                     _CREN	set	196
   177     00C1                     _OERR	set	193
   178     0064                     _TXIF	set	100
   179     0098                     _TXSTA	set	152
   180     0099                     _SPBRG	set	153
   181                           
   182                           	psect	strings
   183     0003                     __pstrings:
   184     0003                     stringtab:
   185     0003                     __stringtab:
   186     0003                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189     0003                     stringdir:
   190     0003  3000               	movlw	high stringdir
   191     0004  008A               	movwf	10
   192     0005  0804               	movf	4,w
   193     0006  0A84               	incf	4,f
   194     0007  0782               	addwf	2,f
   195     0008                     __stringbase:
   196     0008  3400               	retlw	0
   197     0009                     __end_of__stringtab:
   198     0009                     STR_1:
   199     0009  3448               	retlw	72	;'H'
   200     000A  3465               	retlw	101	;'e'
   201     000B  346C               	retlw	108	;'l'
   202     000C  346C               	retlw	108	;'l'
   203     000D  346F               	retlw	111	;'o'
   204     000E  3420               	retlw	32	;' '
   205     000F  3453               	retlw	83	;'S'
   206     0010  346F               	retlw	111	;'o'
   207     0011  3466               	retlw	102	;'f'
   208     0012  3463               	retlw	99	;'c'
   209     0013  346F               	retlw	111	;'o'
   210     0014  346E               	retlw	110	;'n'
   211     0015  3420               	retlw	32	;' '
   212     0016  3421               	retlw	33	;'!'
   213     0017  340D               	retlw	13
   214     0018  3400               	retlw	0
   215                           
   216                           	psect	cinit
   217     07FC                     start_initialization:	
   218                           ; #config settings
   219                           
   220     07FC                     __initialization:
   221     07FC                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224     07FC                     __end_of__initialization:
   225     07FC  0183               	clrf	3
   226     07FD  120A  118A  2EC5   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	cstackCOMMON
   229     0070                     __pcstackCOMMON:
   230     0070                     ?_UART_WriteString:
   231     0070                     ?_UART_WriteData:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     ??_UART_WriteData:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0070                     ?___aldiv:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     UART_WriteData@data:	
   241                           ; 4 bytes @ 0x0
   242                           
   243     0070                     ___aldiv@divisor:	
   244                           ; 1 bytes @ 0x0
   245                           
   246                           
   247                           ; 4 bytes @ 0x0
   248     0070                     	ds	1
   249     0071                     ??_UART_WriteString:
   250                           
   251                           ; 1 bytes @ 0x1
   252     0071                     	ds	1
   253     0072                     UART_WriteString@ptr:
   254                           
   255                           ; 1 bytes @ 0x2
   256     0072                     	ds	2
   257     0074                     ___aldiv@dividend:
   258                           
   259                           ; 4 bytes @ 0x4
   260     0074                     	ds	4
   261     0078                     ??___aldiv:
   262                           
   263                           ; 1 bytes @ 0x8
   264     0078                     	ds	1
   265     0079                     UART_Initialize@baud_value:
   266                           
   267                           ; 4 bytes @ 0x9
   268     0079                     	ds	4
   269                           
   270                           	psect	cstackBANK0
   271     0020                     __pcstackBANK0:
   272     0020                     ___aldiv@counter:
   273                           
   274                           ; 1 bytes @ 0x0
   275     0020                     	ds	1
   276     0021                     ___aldiv@sign:
   277                           
   278                           ; 1 bytes @ 0x1
   279     0021                     	ds	1
   280     0022                     ___aldiv@quotient:
   281                           
   282                           ; 4 bytes @ 0x2
   283     0022                     	ds	4
   284     0026                     ?_UART_Initialize:
   285     0026                     UART_Initialize@Baud:	
   286                           ; 1 bytes @ 0x6
   287                           
   288                           
   289                           ; 4 bytes @ 0x6
   290     0026                     	ds	4
   291     002A                     ??_UART_Initialize:
   292                           
   293                           ; 1 bytes @ 0xA
   294     002A                     	ds	8
   295     0032                     ?_main:
   296     0032                     main@argc:	
   297                           ; 2 bytes @ 0x12
   298                           
   299                           
   300                           ; 2 bytes @ 0x12
   301     0032                     	ds	2
   302     0034                     main@argv:
   303                           
   304                           ; 2 bytes @ 0x14
   305     0034                     	ds	2
   306     0036                     ??_main:
   307                           
   308                           ; 1 bytes @ 0x16
   309     0036                     	ds	3
   310                           
   311                           	psect	maintext
   312     06C5                     __pmaintext:	
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 26 in file "Main_TX.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;  argc            2   18[BANK0 ] int 
   321 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  2   18[BANK0 ] int 
   326 ;; Registers used:
   327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : B00/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       4       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          0       3       0       0       0
   336 ;;      Totals:         0       7       0       0       0
   337 ;;Total ram usage:        7 bytes
   338 ;; Hardware stack levels required when called: 2
   339 ;; This function calls:
   340 ;;		_UART_Initialize
   341 ;;		_UART_WriteData
   342 ;;		_UART_WriteString
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348     06C5                     _main:	
   349                           ;psect for function _main
   350                           
   351     06C5                     l784:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   354                           
   355                           
   356                           ;Main_TX.c: 27:     UART_Initialize(9600);
   357     06C5  3000               	movlw	0
   358     06C6  1283               	bcf	3,5	;RP0=0, select bank0
   359     06C7  1303               	bcf	3,6	;RP1=0, select bank0
   360     06C8  00A9               	movwf	UART_Initialize@Baud+3
   361     06C9  3000               	movlw	0
   362     06CA  00A8               	movwf	UART_Initialize@Baud+2
   363     06CB  3025               	movlw	37
   364     06CC  00A7               	movwf	UART_Initialize@Baud+1
   365     06CD  3080               	movlw	128
   366     06CE  00A6               	movwf	UART_Initialize@Baud
   367     06CF  120A  118A  2708  120A  118A  	fcall	_UART_Initialize
   368     06D4                     l786:
   369                           
   370                           ;Main_TX.c: 28:     UART_WriteString("Hello Sofcon !\r");
   371     06D4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   372     06D5  120A  118A  26A6  120A  118A  	fcall	_UART_WriteString
   373     06DA                     l788:
   374                           
   375                           ;Main_TX.c: 30:         UART_WriteData('a');
   376     06DA  3061               	movlw	97
   377     06DB  120A  118A  269C  120A  118A  	fcall	_UART_WriteData
   378     06E0                     l790:
   379                           
   380                           ;Main_TX.c: 31:         _delay((unsigned long)((100)*(16000000/4000.0)));
   381     06E0  3003               	movlw	3
   382     06E1  1283               	bcf	3,5	;RP0=0, select bank0
   383     06E2  1303               	bcf	3,6	;RP1=0, select bank0
   384     06E3  00B8               	movwf	??_main+2
   385     06E4  3008               	movlw	8
   386     06E5  00B7               	movwf	??_main+1
   387     06E6  3076               	movlw	118
   388     06E7  00B6               	movwf	??_main
   389     06E8                     u307:
   390     06E8  0BB6               	decfsz	??_main,f
   391     06E9  2EE8               	goto	u307
   392     06EA  0BB7               	decfsz	??_main+1,f
   393     06EB  2EE8               	goto	u307
   394     06EC  0BB8               	decfsz	??_main+2,f
   395     06ED  2EE8               	goto	u307
   396     06EE  0000               	nop
   397     06EF                     l792:
   398                           
   399                           ;Main_TX.c: 32:         UART_WriteData('b');
   400     06EF  3062               	movlw	98
   401     06F0  120A  118A  269C  120A  118A  	fcall	_UART_WriteData
   402     06F5                     l794:
   403                           
   404                           ;Main_TX.c: 33:         _delay((unsigned long)((100)*(16000000/4000.0)));
   405     06F5  3003               	movlw	3
   406     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   407     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   408     06F8  00B8               	movwf	??_main+2
   409     06F9  3008               	movlw	8
   410     06FA  00B7               	movwf	??_main+1
   411     06FB  3076               	movlw	118
   412     06FC  00B6               	movwf	??_main
   413     06FD                     u317:
   414     06FD  0BB6               	decfsz	??_main,f
   415     06FE  2EFD               	goto	u317
   416     06FF  0BB7               	decfsz	??_main+1,f
   417     0700  2EFD               	goto	u317
   418     0701  0BB8               	decfsz	??_main+2,f
   419     0702  2EFD               	goto	u317
   420     0703  0000               	nop
   421     0704  2EDA               	goto	l788
   422     0705  120A  118A  2800   	ljmp	start
   423     0708                     __end_of_main:
   424                           
   425                           	psect	text1
   426     06A6                     __ptext1:	
   427 ;; *************** function _UART_WriteString *****************
   428 ;; Defined at:
   429 ;;		line 57 in file "Main_TX.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  ptr             1    wreg     PTR unsigned char 
   432 ;;		 -> STR_1(16), 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  ptr             1    2[COMMON] PTR unsigned char 
   435 ;;		 -> STR_1(16), 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         1       0       0       0       0
   447 ;;      Temps:          1       0       0       0       0
   448 ;;      Totals:         2       0       0       0       0
   449 ;;Total ram usage:        2 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; Hardware stack levels required when called: 1
   452 ;; This function calls:
   453 ;;		_UART_WriteData
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     06A6                     _UART_WriteString:	
   460                           ;psect for function _UART_WriteString
   461                           
   462                           
   463                           ;incstack = 0
   464                           ; Regs used in _UART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   465                           ;UART_WriteString@ptr stored from wreg
   466     06A6  00F2               	movwf	UART_WriteString@ptr
   467     06A7                     l776:
   468                           
   469                           ;Main_TX.c: 58:     while(*ptr){
   470     06A7  2EB8               	goto	l782
   471     06A8                     l778:
   472                           
   473                           ;Main_TX.c: 59:         UART_WriteData(*ptr++);
   474     06A8  0872               	movf	UART_WriteString@ptr,w
   475     06A9  0084               	movwf	4
   476     06AA  120A  118A  2003  120A  118A  	fcall	stringdir
   477     06AF  120A  118A  269C  120A  118A  	fcall	_UART_WriteData
   478     06B4                     l780:
   479     06B4  3001               	movlw	1
   480     06B5  00F1               	movwf	??_UART_WriteString
   481     06B6  0871               	movf	??_UART_WriteString,w
   482     06B7  07F2               	addwf	UART_WriteString@ptr,f
   483     06B8                     l782:
   484                           
   485                           ;Main_TX.c: 58:     while(*ptr){
   486     06B8  0872               	movf	UART_WriteString@ptr,w
   487     06B9  0084               	movwf	4
   488     06BA  120A  118A  2003  120A  118A  	fcall	stringdir
   489     06BF  3A00               	xorlw	0
   490     06C0  1D03               	skipz
   491     06C1  2EC3               	goto	u291
   492     06C2  2EC4               	goto	u290
   493     06C3                     u291:
   494     06C3  2EA8               	goto	l778
   495     06C4                     u290:
   496     06C4                     l56:
   497     06C4  0008               	return
   498     06C5                     __end_of_UART_WriteString:
   499                           
   500                           	psect	text2
   501     069C                     __ptext2:	
   502 ;; *************** function _UART_WriteData *****************
   503 ;; Defined at:
   504 ;;		line 44 in file "Main_TX.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  data            1    wreg     unsigned char 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  data            1    0[COMMON] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         1       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         1       0       0       0       0
   522 ;;Total ram usage:        1 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;;		_UART_WriteString
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532     069C                     _UART_WriteData:	
   533                           ;psect for function _UART_WriteData
   534                           
   535                           
   536                           ;incstack = 0
   537                           ; Regs used in _UART_WriteData: [wreg]
   538                           ;UART_WriteData@data stored from wreg
   539     069C  00F0               	movwf	UART_WriteData@data
   540     069D                     l648:
   541     069D                     l40:	
   542                           ;Main_TX.c: 45:     while(!TXIF);
   543                           
   544     069D  1283               	bcf	3,5	;RP0=0, select bank0
   545     069E  1303               	bcf	3,6	;RP1=0, select bank0
   546     069F  1E0C               	btfss	12,4	;volatile
   547     06A0  2EA2               	goto	u11
   548     06A1  2EA3               	goto	u10
   549     06A2                     u11:
   550     06A2  2E9D               	goto	l40
   551     06A3                     u10:
   552     06A3                     l650:
   553                           
   554                           ;Main_TX.c: 46:     TXREG = data;
   555     06A3  0870               	movf	UART_WriteData@data,w
   556     06A4  0099               	movwf	25	;volatile
   557     06A5                     l43:
   558     06A5  0008               	return
   559     06A6                     __end_of_UART_WriteData:
   560                           
   561                           	psect	text3
   562     0708                     __ptext3:	
   563 ;; *************** function _UART_Initialize *****************
   564 ;; Defined at:
   565 ;;		line 38 in file "Main_TX.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  Baud            4    6[BANK0 ] long 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  baud_value      4    9[COMMON] unsigned long 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       4       0       0       0
   580 ;;      Locals:         4       0       0       0       0
   581 ;;      Temps:          0       8       0       0       0
   582 ;;      Totals:         4      12       0       0       0
   583 ;;Total ram usage:       16 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; Hardware stack levels required when called: 1
   586 ;; This function calls:
   587 ;;		___aldiv
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593     0708                     _UART_Initialize:	
   594                           ;psect for function _UART_Initialize
   595                           
   596     0708                     l768:	
   597                           ;incstack = 0
   598                           ; Regs used in _UART_Initialize: [wreg+status,2+status,0+pclath+cstack]
   599                           
   600                           
   601                           ;Main_TX.c: 39:     unsigned long baud_value = (((16000000) /(64*Baud))-1);
   602     0708  30FF               	movlw	255
   603     0709  1283               	bcf	3,5	;RP0=0, select bank0
   604     070A  1303               	bcf	3,6	;RP1=0, select bank0
   605     070B  00AA               	movwf	??_UART_Initialize
   606     070C  30FF               	movlw	255
   607     070D  00AB               	movwf	??_UART_Initialize+1
   608     070E  30FF               	movlw	255
   609     070F  00AC               	movwf	??_UART_Initialize+2
   610     0710  30FF               	movlw	255
   611     0711  00AD               	movwf	??_UART_Initialize+3
   612     0712  0826               	movf	UART_Initialize@Baud,w
   613     0713  00AE               	movwf	??_UART_Initialize+4
   614     0714  0827               	movf	UART_Initialize@Baud+1,w
   615     0715  00AF               	movwf	??_UART_Initialize+5
   616     0716  0828               	movf	UART_Initialize@Baud+2,w
   617     0717  00B0               	movwf	??_UART_Initialize+6
   618     0718  0829               	movf	UART_Initialize@Baud+3,w
   619     0719  00B1               	movwf	??_UART_Initialize+7
   620     071A  3006               	movlw	6
   621     071B                     u275:
   622     071B  1003               	clrc
   623     071C  0DAE               	rlf	??_UART_Initialize+4,f
   624     071D  0DAF               	rlf	??_UART_Initialize+5,f
   625     071E  0DB0               	rlf	??_UART_Initialize+6,f
   626     071F  0DB1               	rlf	??_UART_Initialize+7,f
   627     0720                     u270:
   628     0720  3EFF               	addlw	-1
   629     0721  1D03               	skipz
   630     0722  2F1B               	goto	u275
   631     0723  0831               	movf	??_UART_Initialize+7,w
   632     0724  00F3               	movwf	___aldiv@divisor+3
   633     0725  0830               	movf	??_UART_Initialize+6,w
   634     0726  00F2               	movwf	___aldiv@divisor+2
   635     0727  082F               	movf	??_UART_Initialize+5,w
   636     0728  00F1               	movwf	___aldiv@divisor+1
   637     0729  082E               	movf	??_UART_Initialize+4,w
   638     072A  00F0               	movwf	___aldiv@divisor
   639     072B  3000               	movlw	0
   640     072C  00F7               	movwf	___aldiv@dividend+3
   641     072D  30F4               	movlw	244
   642     072E  00F6               	movwf	___aldiv@dividend+2
   643     072F  3024               	movlw	36
   644     0730  00F5               	movwf	___aldiv@dividend+1
   645     0731  3000               	movlw	0
   646     0732  00F4               	movwf	___aldiv@dividend
   647     0733  120A  118A  275F  120A  118A  	fcall	___aldiv
   648     0738  0870               	movf	?___aldiv,w
   649     0739  1283               	bcf	3,5	;RP0=0, select bank0
   650     073A  1303               	bcf	3,6	;RP1=0, select bank0
   651     073B  07AA               	addwf	??_UART_Initialize,f
   652     073C  0871               	movf	?___aldiv+1,w
   653     073D  1803               	skipnc
   654     073E  0F71               	incfsz	?___aldiv+1,w
   655     073F  2F41               	goto	u280
   656     0740  2F42               	goto	u281
   657     0741                     u280:
   658     0741  07AB               	addwf	??_UART_Initialize+1,f
   659     0742                     u281:
   660     0742  0872               	movf	?___aldiv+2,w
   661     0743  1803               	skipnc
   662     0744  0F72               	incfsz	?___aldiv+2,w
   663     0745  2F47               	goto	u282
   664     0746  2F48               	goto	u283
   665     0747                     u282:
   666     0747  07AC               	addwf	??_UART_Initialize+2,f
   667     0748                     u283:
   668     0748  0873               	movf	?___aldiv+3,w
   669     0749  1803               	skipnc
   670     074A  0A73               	incf	?___aldiv+3,w
   671     074B  07AD               	addwf	??_UART_Initialize+3,f
   672     074C  082D               	movf	??_UART_Initialize+3,w
   673     074D  00FC               	movwf	UART_Initialize@baud_value+3
   674     074E  082C               	movf	??_UART_Initialize+2,w
   675     074F  00FB               	movwf	UART_Initialize@baud_value+2
   676     0750  082B               	movf	??_UART_Initialize+1,w
   677     0751  00FA               	movwf	UART_Initialize@baud_value+1
   678     0752  082A               	movf	??_UART_Initialize,w
   679     0753  00F9               	movwf	UART_Initialize@baud_value
   680     0754                     l770:
   681                           
   682                           ;Main_TX.c: 40:     SPBRG = baud_value;
   683     0754  0879               	movf	UART_Initialize@baud_value,w
   684     0755  1683               	bsf	3,5	;RP0=1, select bank1
   685     0756  1303               	bcf	3,6	;RP1=0, select bank1
   686     0757  0099               	movwf	25	;volatile
   687     0758                     l772:
   688                           
   689                           ;Main_TX.c: 41:     TXSTA = 0x24;
   690     0758  3024               	movlw	36
   691     0759  0098               	movwf	24	;volatile
   692     075A                     l774:
   693                           
   694                           ;Main_TX.c: 42:     RCSTA = 0x90;
   695     075A  3090               	movlw	144
   696     075B  1283               	bcf	3,5	;RP0=0, select bank0
   697     075C  1303               	bcf	3,6	;RP1=0, select bank0
   698     075D  0098               	movwf	24	;volatile
   699     075E                     l37:
   700     075E  0008               	return
   701     075F                     __end_of_UART_Initialize:
   702                           
   703                           	psect	text4
   704     075F                     __ptext4:	
   705 ;; *************** function ___aldiv *****************
   706 ;; Defined at:
   707 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  divisor         4    0[COMMON] long 
   710 ;;  dividend        4    4[COMMON] long 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  quotient        4    2[BANK0 ] long 
   713 ;;  sign            1    1[BANK0 ] unsigned char 
   714 ;;  counter         1    0[BANK0 ] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  4    0[COMMON] long 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         8       0       0       0       0
   725 ;;      Locals:         0       6       0       0       0
   726 ;;      Temps:          1       0       0       0       0
   727 ;;      Totals:         9       6       0       0       0
   728 ;;Total ram usage:       15 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_UART_Initialize
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737     075F                     ___aldiv:	
   738                           ;psect for function ___aldiv
   739                           
   740     075F                     l728:	
   741                           ;incstack = 0
   742                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   743                           
   744     075F  1283               	bcf	3,5	;RP0=0, select bank0
   745     0760  1303               	bcf	3,6	;RP1=0, select bank0
   746     0761  01A1               	clrf	___aldiv@sign
   747     0762                     l730:
   748     0762  1FF3               	btfss	___aldiv@divisor+3,7
   749     0763  2F65               	goto	u171
   750     0764  2F66               	goto	u170
   751     0765                     u171:
   752     0765  2F73               	goto	l207
   753     0766                     u170:
   754     0766                     l732:
   755     0766  09F0               	comf	___aldiv@divisor,f
   756     0767  09F1               	comf	___aldiv@divisor+1,f
   757     0768  09F2               	comf	___aldiv@divisor+2,f
   758     0769  09F3               	comf	___aldiv@divisor+3,f
   759     076A  0AF0               	incf	___aldiv@divisor,f
   760     076B  1903               	skipnz
   761     076C  0AF1               	incf	___aldiv@divisor+1,f
   762     076D  1903               	skipnz
   763     076E  0AF2               	incf	___aldiv@divisor+2,f
   764     076F  1903               	skipnz
   765     0770  0AF3               	incf	___aldiv@divisor+3,f
   766     0771  01A1               	clrf	___aldiv@sign
   767     0772  0AA1               	incf	___aldiv@sign,f
   768     0773                     l207:
   769     0773  1FF7               	btfss	___aldiv@dividend+3,7
   770     0774  2F76               	goto	u181
   771     0775  2F77               	goto	u180
   772     0776                     u181:
   773     0776  2F86               	goto	l738
   774     0777                     u180:
   775     0777                     l734:
   776     0777  09F4               	comf	___aldiv@dividend,f
   777     0778  09F5               	comf	___aldiv@dividend+1,f
   778     0779  09F6               	comf	___aldiv@dividend+2,f
   779     077A  09F7               	comf	___aldiv@dividend+3,f
   780     077B  0AF4               	incf	___aldiv@dividend,f
   781     077C  1903               	skipnz
   782     077D  0AF5               	incf	___aldiv@dividend+1,f
   783     077E  1903               	skipnz
   784     077F  0AF6               	incf	___aldiv@dividend+2,f
   785     0780  1903               	skipnz
   786     0781  0AF7               	incf	___aldiv@dividend+3,f
   787     0782                     l736:
   788     0782  3001               	movlw	1
   789     0783  00F8               	movwf	??___aldiv
   790     0784  0878               	movf	??___aldiv,w
   791     0785  06A1               	xorwf	___aldiv@sign,f
   792     0786                     l738:
   793     0786  3000               	movlw	0
   794     0787  00A5               	movwf	___aldiv@quotient+3
   795     0788  3000               	movlw	0
   796     0789  00A4               	movwf	___aldiv@quotient+2
   797     078A  3000               	movlw	0
   798     078B  00A3               	movwf	___aldiv@quotient+1
   799     078C  3000               	movlw	0
   800     078D  00A2               	movwf	___aldiv@quotient
   801     078E                     l740:
   802     078E  0873               	movf	___aldiv@divisor+3,w
   803     078F  0472               	iorwf	___aldiv@divisor+2,w
   804     0790  0471               	iorwf	___aldiv@divisor+1,w
   805     0791  0470               	iorwf	___aldiv@divisor,w
   806     0792  1903               	skipnz
   807     0793  2F95               	goto	u191
   808     0794  2F96               	goto	u190
   809     0795                     u191:
   810     0795  2FE3               	goto	l760
   811     0796                     u190:
   812     0796                     l742:
   813     0796  01A0               	clrf	___aldiv@counter
   814     0797  0AA0               	incf	___aldiv@counter,f
   815     0798  2FA6               	goto	l746
   816     0799                     l744:
   817     0799  3001               	movlw	1
   818     079A  00F8               	movwf	??___aldiv
   819     079B                     u205:
   820     079B  1003               	clrc
   821     079C  0DF0               	rlf	___aldiv@divisor,f
   822     079D  0DF1               	rlf	___aldiv@divisor+1,f
   823     079E  0DF2               	rlf	___aldiv@divisor+2,f
   824     079F  0DF3               	rlf	___aldiv@divisor+3,f
   825     07A0  0BF8               	decfsz	??___aldiv,f
   826     07A1  2F9B               	goto	u205
   827     07A2  3001               	movlw	1
   828     07A3  00F8               	movwf	??___aldiv
   829     07A4  0878               	movf	??___aldiv,w
   830     07A5  07A0               	addwf	___aldiv@counter,f
   831     07A6                     l746:
   832     07A6  1FF3               	btfss	___aldiv@divisor+3,7
   833     07A7  2FA9               	goto	u211
   834     07A8  2FAA               	goto	u210
   835     07A9                     u211:
   836     07A9  2F99               	goto	l744
   837     07AA                     u210:
   838     07AA                     l748:
   839     07AA  3001               	movlw	1
   840     07AB  00F8               	movwf	??___aldiv
   841     07AC                     u225:
   842     07AC  1003               	clrc
   843     07AD  0DA2               	rlf	___aldiv@quotient,f
   844     07AE  0DA3               	rlf	___aldiv@quotient+1,f
   845     07AF  0DA4               	rlf	___aldiv@quotient+2,f
   846     07B0  0DA5               	rlf	___aldiv@quotient+3,f
   847     07B1  0BF8               	decfsz	??___aldiv,f
   848     07B2  2FAC               	goto	u225
   849     07B3                     l750:
   850     07B3  0873               	movf	___aldiv@divisor+3,w
   851     07B4  0277               	subwf	___aldiv@dividend+3,w
   852     07B5  1D03               	skipz
   853     07B6  2FC1               	goto	u235
   854     07B7  0872               	movf	___aldiv@divisor+2,w
   855     07B8  0276               	subwf	___aldiv@dividend+2,w
   856     07B9  1D03               	skipz
   857     07BA  2FC1               	goto	u235
   858     07BB  0871               	movf	___aldiv@divisor+1,w
   859     07BC  0275               	subwf	___aldiv@dividend+1,w
   860     07BD  1D03               	skipz
   861     07BE  2FC1               	goto	u235
   862     07BF  0870               	movf	___aldiv@divisor,w
   863     07C0  0274               	subwf	___aldiv@dividend,w
   864     07C1                     u235:
   865     07C1  1C03               	skipc
   866     07C2  2FC4               	goto	u231
   867     07C3  2FC5               	goto	u230
   868     07C4                     u231:
   869     07C4  2FD4               	goto	l756
   870     07C5                     u230:
   871     07C5                     l752:
   872     07C5  0870               	movf	___aldiv@divisor,w
   873     07C6  02F4               	subwf	___aldiv@dividend,f
   874     07C7  0871               	movf	___aldiv@divisor+1,w
   875     07C8  1C03               	skipc
   876     07C9  0F71               	incfsz	___aldiv@divisor+1,w
   877     07CA  02F5               	subwf	___aldiv@dividend+1,f
   878     07CB  0872               	movf	___aldiv@divisor+2,w
   879     07CC  1C03               	skipc
   880     07CD  0F72               	incfsz	___aldiv@divisor+2,w
   881     07CE  02F6               	subwf	___aldiv@dividend+2,f
   882     07CF  0873               	movf	___aldiv@divisor+3,w
   883     07D0  1C03               	skipc
   884     07D1  0F73               	incfsz	___aldiv@divisor+3,w
   885     07D2  02F7               	subwf	___aldiv@dividend+3,f
   886     07D3                     l754:
   887     07D3  1422               	bsf	___aldiv@quotient,0
   888     07D4                     l756:
   889     07D4  3001               	movlw	1
   890     07D5                     u245:
   891     07D5  1003               	clrc
   892     07D6  0CF3               	rrf	___aldiv@divisor+3,f
   893     07D7  0CF2               	rrf	___aldiv@divisor+2,f
   894     07D8  0CF1               	rrf	___aldiv@divisor+1,f
   895     07D9  0CF0               	rrf	___aldiv@divisor,f
   896     07DA  3EFF               	addlw	-1
   897     07DB  1D03               	skipz
   898     07DC  2FD5               	goto	u245
   899     07DD                     l758:
   900     07DD  3001               	movlw	1
   901     07DE  02A0               	subwf	___aldiv@counter,f
   902     07DF  1D03               	btfss	3,2
   903     07E0  2FE2               	goto	u251
   904     07E1  2FE3               	goto	u250
   905     07E2                     u251:
   906     07E2  2FAA               	goto	l748
   907     07E3                     u250:
   908     07E3                     l760:
   909     07E3  0821               	movf	___aldiv@sign,w
   910     07E4  1903               	btfsc	3,2
   911     07E5  2FE7               	goto	u261
   912     07E6  2FE8               	goto	u260
   913     07E7                     u261:
   914     07E7  2FF3               	goto	l764
   915     07E8                     u260:
   916     07E8                     l762:
   917     07E8  09A2               	comf	___aldiv@quotient,f
   918     07E9  09A3               	comf	___aldiv@quotient+1,f
   919     07EA  09A4               	comf	___aldiv@quotient+2,f
   920     07EB  09A5               	comf	___aldiv@quotient+3,f
   921     07EC  0AA2               	incf	___aldiv@quotient,f
   922     07ED  1903               	skipnz
   923     07EE  0AA3               	incf	___aldiv@quotient+1,f
   924     07EF  1903               	skipnz
   925     07F0  0AA4               	incf	___aldiv@quotient+2,f
   926     07F1  1903               	skipnz
   927     07F2  0AA5               	incf	___aldiv@quotient+3,f
   928     07F3                     l764:
   929     07F3  0825               	movf	___aldiv@quotient+3,w
   930     07F4  00F3               	movwf	?___aldiv+3
   931     07F5  0824               	movf	___aldiv@quotient+2,w
   932     07F6  00F2               	movwf	?___aldiv+2
   933     07F7  0823               	movf	___aldiv@quotient+1,w
   934     07F8  00F1               	movwf	?___aldiv+1
   935     07F9  0822               	movf	___aldiv@quotient,w
   936     07FA  00F0               	movwf	?___aldiv
   937     07FB                     l217:
   938     07FB  0008               	return
   939     07FC                     __end_of___aldiv:
   940     007E                     btemp	set	126	;btemp
   941     007E                     wtemp0	set	126
   942                           
   943                           	psect	idloc
   944                           
   945                           ;Config register IDLOC0 @ 0x2000
   946                           ;	unspecified, using default values
   947     2000                     	org	8192
   948     2000  3FFF               	dw	16383
   949                           
   950                           ;Config register IDLOC1 @ 0x2001
   951                           ;	unspecified, using default values
   952     2001                     	org	8193
   953     2001  3FFF               	dw	16383
   954                           
   955                           ;Config register IDLOC2 @ 0x2002
   956                           ;	unspecified, using default values
   957     2002                     	org	8194
   958     2002  3FFF               	dw	16383
   959                           
   960                           ;Config register IDLOC3 @ 0x2003
   961                           ;	unspecified, using default values
   962     2003                     	org	8195
   963     2003  3FFF               	dw	16383
   964                           
   965                           	psect	config
   966                           
   967                           ;Config register CONFIG @ 0x2007
   968                           ;	Oscillator Selection bits
   969                           ;	FOSC = EXTRC, RC oscillator
   970                           ;	Watchdog Timer Enable bit
   971                           ;	WDTE = OFF, WDT disabled
   972                           ;	Power-up Timer Enable bit
   973                           ;	PWRTE = OFF, PWRT disabled
   974                           ;	Brown-out Reset Enable bit
   975                           ;	BOREN = OFF, BOR disabled
   976                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   977                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   978                           ;	Data EEPROM Memory Code Protection bit
   979                           ;	CPD = OFF, Data EEPROM code protection off
   980                           ;	Flash Program Memory Write Enable bits
   981                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   982                           ;	In-Circuit Debugger Mode bit
   983                           ;	DEBUG = 0x1, unprogrammed default
   984                           ;	Flash Program Memory Code Protection bit
   985                           ;	CP = OFF, Code protection off
   986     2007                     	org	8199
   987     2007  3F3B               	dw	16187

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     25      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_WriteString@ptr	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_UART_Initialize
    _UART_WriteString->_UART_WriteData
    _UART_Initialize->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Initialize
    _UART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4     681
                                             18 BANK0      7     3      4
                    _UART_Initialize
                     _UART_WriteData
                   _UART_WriteString
 ---------------------------------------------------------------------------------
 (1) _UART_WriteString                                     2     2      0      93
                                              1 COMMON     2     2      0
                     _UART_WriteData
 ---------------------------------------------------------------------------------
 (2) _UART_WriteData                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                     16    12      4     573
                                              9 COMMON     4     4      0
                                              6 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initialize
     ___aldiv
   _UART_WriteData
   _UART_WriteString
     _UART_WriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 17:19:56 2023

                        pc 0002                         l40 069D                         l43 06A5  
                       l37 075E                         l56 06C4                         u10 06A3  
                       u11 06A2                         fsr 0004                        l207 0773  
                      l217 07FB                        l730 0762                        l650 06A3  
                      l740 078E                        l732 0766                        l750 07B3  
                      l742 0796                        l734 0777                        l752 07C5  
                      l744 0799                        l760 07E3                        l736 0782  
                      l728 075F                        l648 069D                        l762 07E8  
                      l754 07D3                        l746 07A6                        l738 0786  
                      l770 0754                        l764 07F3                        l756 07D4  
                      l748 07AA                        l772 0758                        l780 06B4  
                      l758 07DD                        l774 075A                        l782 06B8  
                      l790 06E0                        l768 0708                        l776 06A7  
                      l792 06EF                        l784 06C5                        l778 06A8  
                      l794 06F5                        l786 06D4                        l788 06DA  
                      u210 07AA                        u211 07A9                        u205 079B  
                      u230 07C5                        u231 07C4                        u225 07AC  
                      u250 07E3                        u170 0766                        u251 07E2  
                      u235 07C1                        u171 0765                        u307 06E8  
                      u260 07E8                        u180 0777                        u261 07E7  
                      u245 07D5                        u181 0776                        u317 06FD  
                      u190 0796                        u270 0720                        u191 0795  
                      u280 0741                        u281 0742                        u282 0747  
                      u290 06C4                        u283 0748                        u275 071B  
                      u291 06C3                        fsr0 0004                       STR_1 0009  
                     _CREN 00C4                       _RCIF 0065                       _OERR 00C1  
                     _TXIF 0064                       _main 06C5                       btemp 007E  
                     start 0000           ?_UART_Initialize 0026            __end_of___aldiv 07FC  
                    ?_main 0032                      _RCREG 001A                      _RCSTA 0018  
                    _SPBRG 0099                      _TXREG 0019                      _TXSTA 0098  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07FC               __end_of_main 0708   __end_of_UART_WriteString 06C5  
                   ??_main 0036                  ??___aldiv 0078    __end_of__initialization 07FC  
           __pcstackCOMMON 0070                 __pmaintext 06C5                 __stringtab 0003  
                  ___aldiv 075F          ?_UART_WriteString 0070                    __ptext1 06A6  
                  __ptext2 069C                    __ptext3 0708                    __ptext4 075F  
       ??_UART_WriteString 0071           ___aldiv@dividend 0074       end_of_initialization 07FC  
         ___aldiv@quotient 0022             _UART_WriteData 069C     __end_of_UART_WriteData 06A6  
      start_initialization 07FC          ??_UART_Initialize 002A            ?_UART_WriteData 0070  
                ___latbits 0002              __pcstackBANK0 0020                   ?___aldiv 0070  
                __pstrings 0003        UART_Initialize@Baud 0026            ___aldiv@divisor 0070  
          ___aldiv@counter 0020  UART_Initialize@baud_value 0079                __stringbase 0008  
       __end_of__stringtab 0009            _UART_Initialize 0708         UART_WriteData@data 0070  
         ??_UART_WriteData 0070                   main@argc 0032                   main@argv 0034  
      UART_WriteString@ptr 0072           _UART_WriteString 06A6                  stringcode 0003  
  __end_of_UART_Initialize 075F                   stringdir 0003                   stringtab 0003  
             ___aldiv@sign 0021  
